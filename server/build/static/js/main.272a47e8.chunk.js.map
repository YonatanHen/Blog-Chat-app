{"version":3,"sources":["store/actions/users.js","components/main-components/sign-in.jsx","components/main-components/log-in.jsx","components/main.jsx","components/navbar.jsx","components/blog-components/post-components/like.jsx","components/blog-components/post.jsx","components/blog-components/general-components/postsList.jsx","components/blog.jsx","components/about.jsx","components/footer.jsx","components/chat.jsx","components/authError.jsx","components/addPost.jsx","components/update-components/updatePost.jsx","components/update-components/updateUser.jsx","app.jsx","store/reducers/users.js","index.js"],"names":["LOGIN_USER","LOGOUT_USER","loginUser","username","id","token","dispatch","type","userData","err","Error","SignIn","props","useState","redirect","redirectHandler","password","email","inputValues","setInputValues","handleOnChange","event","target","name","value","useDispatch","to","pathname","Container","Form","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","status","alert","message","sessionStorage","setItem","localStorage","usersActions","catch","error","Group","controlId","Label","Control","placeholder","onChange","required","Text","style","color","Button","variant","LogIn","Main","onSignInClick","setState","showLogIn","onLogInClick","state","bind","ButtonGroup","size","className","this","onClick","React","Component","NavBar","store","useStore","redirectHome","redirectHomeHandler","LoggedUser","getState","RedirectToHomePage","removeItem","console","log","Navbar","Brand","Nav","Collapse","NavDropdown","title","Item","getItem","Like","UpdateLikes","clicked","totalLikes","_id","key","Post","deletePost","res","statusText","window","location","reload","redirectToUpdatePost","redirectToUpdate","userButtons","author","Card","Header","Accordion","Toggle","eventKey","toString","authorName","Body","likes","Posts","postslist","filter","post","includes","text","map","Blog","redirectToAddPost","history","push","handleSearch","posts","data","Jumbotron","fluid","InputGroup","Prepend","FormControl","About","Footer","href","rel","authError","AddPost","handleTitle","handleBody","handleSubmit","as","rows","updatePost","UpdateUser","handleUsername","handlePassword","handlePasswordConfirmation","passwordConfirmation","handleEmail","App","exact","path","component","render","initialState","undefined","createStore","action","applyMiddleware","ReduxThunk","ReactDOM","document","getElementById"],"mappings":"+ZAAaA,EAAa,aACbC,EAAc,cAiBdC,EAAY,SAACC,EAAUC,EAAIC,GACpC,OAAO,SAAAC,GACH,IACIA,EAAS,CACLC,KAAMP,EACNQ,SAAU,CAAEL,WAAUC,KAAIC,WAIlC,MAAOI,GACH,MAAM,IAAIC,MAAM,2B,OCoFbC,EAxGA,SAACC,GACf,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,CAC9CV,SAAU,GACVa,SAAU,GACVC,MAAO,KAHR,mBAAOC,EAAP,KAAoBC,EAApB,KAMMC,EAAiB,SAACC,GACvB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdL,EAAe,2BAAKD,GAAN,kBAAoBK,EAAOC,MAGjClB,EAAWmB,cAkCpB,OAAIX,EAEF,cAAC,IAAD,CACCY,GAAI,CACHC,SAAU,QACVf,MAAO,CAAET,SAAUe,EAAYf,aAMjC,cAACyB,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,CAAMC,SA5CY,SAACT,GACrBA,EAAMU,iBACNC,MAAM,UAAW,CAChBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAL,eACFnB,MAGHoB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACkB,MAApBA,EAASE,OACZC,MAAMH,EAASI,UAEfC,eAAeC,QAAQ,WAAYN,EAASpC,UAC5CyC,eAAeC,QAAQ,MAAON,EAASnC,IACvC0C,aAAaD,QAAQ,QAASN,EAASlC,OACvCC,EACCyC,EACC7B,EAAYf,SACZoC,EAASnC,GACTmC,EAASlC,QAGXU,GAAgB,OAGjBiC,OAAM,SAACC,GACPP,MAAM,yBAgBN,UACC,eAACb,EAAA,EAAKqB,MAAN,CAAYC,UAAU,gBAAtB,UACC,cAACtB,EAAA,EAAKuB,MAAN,uBACA,cAACvB,EAAA,EAAKwB,QAAN,CACC9C,KAAK,OACL+C,YAAY,iBACZ/B,KAAK,WACLgC,SAAUnC,EACVoC,UAAQ,OAGV,eAAC3B,EAAA,EAAKqB,MAAN,CAAYC,UAAU,aAAtB,UACC,cAACtB,EAAA,EAAKuB,MAAN,4BACA,cAACvB,EAAA,EAAKwB,QAAN,CACC9C,KAAK,QACL+C,YAAY,cACZ/B,KAAK,QACLgC,SAAUnC,EACVoC,UAAQ,IAET,cAAC3B,EAAA,EAAK4B,KAAN,CAAWC,MAAO,CAAEC,MAAO,WAA3B,+DAID,eAAC9B,EAAA,EAAKqB,MAAN,CAAYC,UAAU,gBAAtB,UACC,cAACtB,EAAA,EAAKuB,MAAN,uBACA,cAACvB,EAAA,EAAKwB,QAAN,CACC9C,KAAK,WACL+C,YAAY,iBACZ/B,KAAK,WACLgC,SAAUnC,EACVoC,UAAQ,IAET,cAAC3B,EAAA,EAAK4B,KAAN,CAAWC,MAAO,CAAEC,MAAO,WAA3B,0CAID,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUtD,KAAK,SAA/B,0BCVUuD,EAvFD,SAAClD,GACd,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,CAC9CV,SAAU,GACVa,SAAU,KAFX,mBAAOE,EAAP,KAAoBC,EAApB,KAKMC,EAAiB,SAACC,GACvB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdL,EAAe,2BAAKD,GAAN,kBAAoBK,EAAOC,MAGpClB,EAAWmB,cAiCjB,OAAIX,EAEF,cAAC,IAAD,CACCY,GAAI,CACHC,SAAU,QACVf,MAAO,CAAET,SAAUe,EAAYf,aAMjC,cAACyB,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,CAAMC,SA3CY,SAACT,GACrBA,EAAMU,iBACNC,MAAM,SAAU,CACfC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAL,eACFnB,MAGHoB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACDA,EAASpC,UAEbyC,eAAeC,QAAQ,WAAY3B,EAAYf,UAC/CyC,eAAeC,QAAQ,MAAON,EAASnC,IACvC0C,aAAaD,QAAQ,QAASN,EAASlC,OACvCC,EACCyC,EACC7B,EAAYf,SACZoC,EAASnC,GACTmC,EAASlC,QAGXU,GAAgB,IAZO2B,MAAM,yCAe9BM,OAAM,SAACC,GACPP,MAAMO,OAgBN,UACC,eAACpB,EAAA,EAAKqB,MAAN,CAAYC,UAAU,gBAAtB,UACC,cAACtB,EAAA,EAAKuB,MAAN,uBACA,cAACvB,EAAA,EAAKwB,QAAN,CACC9C,KAAK,OACLgB,KAAK,WACL+B,YAAY,iBAEZC,SAAUnC,EACVoC,UAAQ,OAGV,eAAC3B,EAAA,EAAKqB,MAAN,CAAYC,UAAU,gBAAtB,UACC,cAACtB,EAAA,EAAKuB,MAAN,uBACA,cAACvB,EAAA,EAAKwB,QAAN,CACC9C,KAAK,WACLgB,KAAK,WACL+B,YAAY,iBAEZC,SAAUnC,OAGZ,cAACwC,EAAA,EAAD,CAAQC,QAAQ,UAAUtD,KAAK,SAA/B,0BCjDUwD,E,kDA/BX,WAAYnD,GAAQ,IAAD,8BACf,cAAMA,IASVoD,cAAgB,WACZ,EAAKC,SAAS,CAACC,WAAW,KAXX,EAcnBC,aAAe,WACX,EAAKF,SAAS,CAACC,WAAW,KAb1B,EAAKE,MAAQ,CACTF,WAAW,GAGf,EAAKF,cAAgB,EAAKA,cAAcK,KAAnB,gBACrB,EAAKF,aAAe,EAAKA,aAAaE,KAAlB,gBAPL,E,0CAkBnB,WACI,OACI,qCACI,eAACC,EAAA,EAAD,CAAaC,KAAK,KAAKC,UAAU,YAAY,aAAW,gBAAxD,UACI,cAACZ,EAAA,EAAD,CAAQY,UAAWC,KAAKL,MAAMF,UAAY,aAAc,GAAIQ,QAASD,KAAKN,aAA1E,oBACA,cAACP,EAAA,EAAD,CAAQY,UAAYC,KAAKL,MAAMF,UAA0B,GAAd,aAAkBQ,QAASD,KAAKT,cAA3E,wBAEHS,KAAKL,MAAMF,UAAY,cAAC,EAAD,IAAW,cAAC,EAAD,W,GA1BhCS,IAAMC,W,gDCyFVC,G,MAxFA,SAACjE,GACf,IAAMkE,EAAQC,cAEd,EAA4ClE,oBAAS,GAArD,mBAAOmE,EAAP,KAAqBC,EAArB,KACMC,EAAaJ,EAAMK,WAAWhF,SAE9BiF,EAAqB,WAC1BpD,MAAM,WAAakD,EAAY,CAC9BjD,OAAQ,QAEPK,KACAM,eAAeyC,WAAW,YAC1BvC,aAAauC,WAAW,SACxBJ,GAAoB,KAuBvB,OAAID,EAEF,cAAC,IAAD,CACCtD,GAAI,CACHC,SAAU,OAeb,qCACE2D,QAAQC,IAAIT,EAAMK,YACnB,eAACK,EAAA,EAAD,CAAQ3B,QAAQ,OAAhB,UACC,cAAC2B,EAAA,EAAOC,MAAR,uBAGA,cAACC,EAAA,EAAD,CAAKlB,UAAU,YAKf,eAACgB,EAAA,EAAOG,SAAR,CAAiBnB,UAAU,sBAA3B,UACC,cAACgB,EAAA,EAAO/B,KAAR,4BACA,eAACmC,EAAA,EAAD,CAAaC,MAAOX,EAAY9E,GAAG,eAAnC,UACC,cAACwF,EAAA,EAAYE,KAAb,UACC,cAAC,IAAD,CAAMpE,GAAG,eAAe8C,UAAU,OAAlC,2BAID,cAACoB,EAAA,EAAYE,KAAb,CAAkBpB,QArDE,WACxB1C,MAAM,iBAAkB,CACvBC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACpB,MAASS,aAAaiD,QAAQ,SAC9B5F,SAAU+E,MAGV5C,KAAK8C,KACLpC,OAAM,SAACC,GACPP,MAAMO,OA0CJ,yBAGA,cAAC2C,EAAA,EAAYE,KAAb,CAAkBpB,QAASU,EAA3B,8BAMH,4B,sCC7BYY,G,wDAvDX,WAAYpF,GAAQ,IAAD,8BACf,cAAMA,IAwBVqF,YAAc,WACV,EAAKhC,SAAS,CACViC,SAAU,EAAK9B,MAAM8B,QACrBC,WAAc,EAAK/B,MAAM8B,QACxB,EAAK9B,MAAM+B,YAAc,EAAK/B,MAAM8B,QAAW,EAAK9B,MAAM+B,WAAa,EACxE,EAAK/B,MAAM+B,WAFyB,EAAK/B,MAAM+B,WAAa,IAKhEnE,MAAM,sBAAuB,CACzBC,OAAQ,QACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,OAAU,EAAKzB,MAAMwF,IACrB,OAAUxD,eAAemD,QAAQ,OACjC,WAAc,EAAK3B,MAAM+B,eAGhCnD,OAAM,SAAAC,GAAK,OAAIP,MAAM,yBAxCtB,EAAK0B,MAAQ,CACT+B,WAAY,EAAKvF,MAAMuF,WACvBD,SAAS,GAEblE,MAAM,oBAAqB,CACvBC,OAAQ,OACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,OAAUO,eAAemD,QAAQ,OACjC,OAAU,EAAKnF,MAAMwF,QAG5B9D,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,EAAK0B,SAAS,CACViC,QAAS3D,EAASf,WAGzBwB,OAAM,SAAAC,GAAK,OAAIP,MAAM,wBAEtB,EAAKuD,YAAc,EAAKA,YAAY5B,KAAjB,gBAtBJ,E,0CA6CnB,WACI,OACI,sBAAKG,UAAU,OAAf,UACI,cAAC,IAAD,CAAYA,UAAYC,KAAKL,MAAM8B,QAAuB,eAAb,WAA6BxB,QAASD,KAAKwB,cACxF,qCAAQxB,KAAKL,MAAM+B,qB,GAlDhBxB,IAAMC,YCErByB,G,MAAM,GAiGMC,E,kDA9FZ,WAAY1F,GAAQ,IAAD,8BACf,cAAMA,IAWV2F,WAAa,WACTvE,MAAM,UAAD,OAAW,EAAKpB,MAAMwF,KAAO,CAC9BnE,OAAQ,SACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,MAASS,aAAaiD,QAAQ,aAGrCzD,MAAK,SAACkE,GACgB,MAAfA,EAAI/D,QAAiC,MAAf+D,EAAI/D,OAC1BC,MAAM8D,EAAIC,aAGV/D,MAAM,QAAD,OAAS,EAAK9B,MAAMiF,MAApB,2BACLa,OAAOC,SAASC,QAAO,OAG9B5D,OAAM,SAACC,GACJP,MAAMO,OA9BK,EAkCnB4D,qBAAuB,WACnB,EAAK5C,SAAS,CACV6C,kBAAkB,KApCP,EAwCnBC,YAAc,WACV,OAAInE,eAAemD,QAAQ,SAAY,EAAKnF,MAAMoG,OAE1C,qCACI,cAACpD,EAAA,EAAD,CAAQC,QAAQ,YAAYU,KAAK,KAAKG,QAAS,EAAKmC,qBAApD,yBACA,cAACjD,EAAA,EAAD,CAAQC,QAAQ,SAASU,KAAK,KAAMG,QAAS,EAAK6B,WAAlD,4BAIL,MA/CP,EAAKF,IAAM,EACX,EAAKjC,MAAQ,CACT0C,kBAAkB,GAGtB,EAAKC,YAAc,EAAKA,YAAY1C,KAAjB,gBACnB,EAAKkC,WAAa,EAAKA,WAAWlC,KAAhB,gBAClB,EAAKwC,qBAAuB,EAAKA,qBAAqBxC,KAA1B,gBATb,E,0CAqDnB,WACI,OAAII,KAAKL,MAAM0C,iBAEX,cAAC,IAAD,CAAUpF,GAAI,CACVC,SAAU,cACVyC,MAAO,CACPgC,IAAK3B,KAAK7D,MAAMwF,IAChBjE,KAAMsC,KAAK7D,MAAMuB,KACjB0D,MAAOpB,KAAK7D,MAAMiF,UAItB,mCACA,eAACoB,EAAA,EAAD,CAAMzC,UAAU,YAAhB,UACA,cAACyC,EAAA,EAAKC,OAAN,UACI,eAACC,EAAA,EAAUC,OAAX,CAAkB5C,UAAU,WAAW6C,YAAahB,GAAKiB,WAAzD,UACI,4BAAI7C,KAAK7D,MAAM2G,aADnB,IACqC,IADrC,IAC4C9C,KAAK7D,MAAMiF,WAGvD,cAACsB,EAAA,EAAUxB,SAAX,CAAoB0B,SAAWhB,EAAKiB,WAApC,SACI,eAACL,EAAA,EAAKO,KAAN,WACI,4BACK/C,KAAK7D,MAAMuB,OAEhB,uBACA,sBAAKqC,UAAU,gBAAf,UACKC,KAAKsC,cACN,cAAC,EAAD,CACIX,IAAO3B,KAAK7D,MAAMwF,IAClBY,OAAUvC,KAAK7D,MAAMoG,OACrBb,WAAc1B,KAAK7D,MAAM6G,yB,GApFtC9C,IAAMC,WCHnB8C,E,4JAEF,WAAU,IAAD,OACL,OACI,mCAEYjD,KAAK7D,MAAM+G,UAAUC,QAAO,SAACC,GAAD,OAAUA,EAAKhC,MAAMiC,SAAS,EAAKlH,MAAMmH,OACrEF,EAAK1F,KAAK2F,SAAS,EAAKlH,MAAMmH,SACzBC,KAAI,SAACH,GACN,OACI,cAACV,EAAA,EAAD,UACI,cAAC,EAAD,CACIf,IAAOyB,EAAKzB,IACZjE,KAAQ0F,EAAK1F,KACb6E,OAAUa,EAAKb,OACfO,WAAcM,EAAKN,WACnB1B,MAASgC,EAAKhC,MACd4B,MAASI,EAAKJ,mB,GAjBlC9C,IAAMC,WA4BX8C,ICwDAO,E,kDA3Ed,WAAYrH,GAAQ,IAAD,8BAClB,cAAMA,IAuBPsH,kBAAoB,WACnB,EAAKtH,MAAMuH,QAAQC,KAAK,aAzBN,EA4BnBC,aAAe,SAAChH,GACf,EAAK4C,SAAS,CACb8D,KAAM1G,EAAMC,OAAOE,SA5BpB,EAAK4C,MAAQ,CACZkE,MAAO,KACPP,KAAM,IAGP/F,MAAM,UAAW,CAChBC,OAAQ,QAEPK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACiG,GACN,EAAKtE,SAAS,CACbqE,MAAOC,OAGRvF,OAAM,SAACC,GACPP,MAAM,wBAGR,EAAKwF,kBAAoB,EAAKA,kBAAkB7D,KAAvB,gBACzB,EAAKgE,aAAe,EAAKA,aAAahE,KAAlB,gBArBF,E,0CAkCnB,WACC,OAAII,KAAKL,MAAMkE,MAEb,qCACC,eAAC1G,EAAA,EAAD,CAAW4C,UAAU,cAArB,UACC,eAACgE,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACC,0CACA,oGAID,uBACA,eAACC,EAAA,EAAD,CAAYnE,KAAK,YAAjB,UACC,cAACmE,EAAA,EAAWC,QAAZ,CAAoBnE,UAAU,gCAA9B,SACC,cAACkE,EAAA,EAAWjF,KAAZ,uBAED,cAACmF,EAAA,EAAD,CACC,aAAW,QACXtF,YAAY,mBACZC,SAAUkB,KAAK4D,kBAGjB,uBACA,qBAAK7D,UAAU,gCAAf,SACC,cAACZ,EAAA,EAAD,CAAQc,QAASD,KAAKyD,kBAAtB,+BAGF,cAAC,EAAD,CAAOP,UAAWlD,KAAKL,MAAMkE,MAAOP,KAAMtD,KAAKL,MAAM2D,UAKtD,sBAAK3H,GAAG,UAAR,oBAEC,uBACA,qBAAKoE,UAAU,e,GAtEDG,IAAMC,WCTnBiE,E,4JACF,WACI,OACI,8BACI,6C,GAJIlE,IAAMC,WAUXiE,ICVTC,GCAanE,IAAMC,U,kKDCrB,WACI,OACI,mCACI,uBACA,sBAAKJ,UAAU,gDAAf,UACI,iEACA,mBAAGuE,KAAK,6CAA6CzH,OAAO,SAAS0H,IAAI,sBAAzE,SAA+F,cAAC,IAAD,CAAgBzE,KAAK,SACpH,mBAAGwE,KAAK,kCAAkCzH,OAAO,SAAS0H,IAAI,sBAA9D,SAAoF,cAAC,IAAD,CAAczE,KAAK,mB,GARtGI,IAAMC,YAeZkE,I,MEjBA,SAASG,IACpB,OACI,qCACI,4DACA,mBAAGF,KAAK,IAAR,+B,ICuEGG,E,kDAzEX,WAAYtI,GAAQ,IAAD,8BACf,cAAMA,IAWVuI,YAAc,SAAC9H,GACX,EAAK4C,SAAS,CAAC4B,MAAOxE,EAAMC,OAAOE,SAbpB,EAgBnB4H,WAAa,SAAC/H,GACV,EAAK4C,SAAS,CAAC9B,KAAMd,EAAMC,OAAOE,SAjBnB,EAoBnB6H,aAAe,SAAChI,GACZA,EAAMU,iBACNC,MAAM,YAAa,CACfC,OAAQ,OACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,MAASS,aAAaiD,QAAQ,SAC9B,MAAS,EAAK3B,MAAMyB,MACpB,KAAQ,EAAKzB,MAAMjC,KACnB,OAAUS,eAAemD,QAAQ,WAGxCzD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACqB,MAApBA,EAASE,OACRC,MAAMH,EAASI,SAEVJ,EAAS6D,IAEd,EAAKxF,MAAMuH,QAAQC,KAAK,CACpBzG,SAAU,UAHKe,MAAMH,EAASI,YAOzCK,OAAM,SAACC,GACJP,MAAM,yBA3CV,EAAK0B,MAAQ,CACTyB,MAAO,GACP1D,KAAM,IAGV,EAAKkH,aAAe,EAAKA,aAAahF,KAAlB,gBACpB,EAAK8E,YAAc,EAAKA,YAAY9E,KAAjB,gBACnB,EAAK+E,WAAa,EAAKA,WAAW/E,KAAhB,gBATH,E,0CAiDnB,WACI,OACI,mCACI,eAACzC,EAAA,EAAD,WACI,oBAAI4C,UAAU,cAAd,0BACA,eAAC3C,EAAA,EAAD,CAAMC,SAAU2C,KAAK4E,aAArB,UACI,eAACxH,EAAA,EAAKqB,MAAN,CAAYC,UAAU,+BAAtB,UACI,cAACtB,EAAA,EAAKuB,MAAN,qBACA,cAACvB,EAAA,EAAKwB,QAAN,CAAciG,GAAG,WAAWC,KAAM,EAAG/H,MAAOiD,KAAKL,MAAMyB,MAAOtC,SAAUkB,KAAK0E,cAC7E,uBACA,cAACtH,EAAA,EAAKuB,MAAN,oBACA,cAACvB,EAAA,EAAKwB,QAAN,CAAciG,GAAG,WAAWC,KAAM,EAAG/H,MAAOiD,KAAKL,MAAMjC,KAAMoB,SAAUkB,KAAK2E,gBAEhF,uBACJ,qBAAK5E,UAAU,gCAAf,SACA,cAACZ,EAAA,EAAD,CAAQC,QAAQ,UAAStD,KAAK,SAA9B,+B,GAjEEoE,IAAMC,WCwEb4E,E,kDAtEX,WAAY5I,GAAQ,IAAD,8BACf,cAAMA,IAWVuI,YAAc,SAAC9H,GACX,EAAK4C,SAAS,CAAC4B,MAAOxE,EAAMC,OAAOE,SAbpB,EAgBnB4H,WAAa,SAAC/H,GACV,EAAK4C,SAAS,CAAC9B,KAAMd,EAAMC,OAAOE,SAjBnB,EAoBnB6H,aAAe,SAAChI,GACZA,EAAMU,iBACNC,MAAM,qBAAsB,CACxBC,OAAQ,QACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,MAASS,aAAaiD,QAAQ,SAC9B,MAAS,EAAK3B,MAAMyB,MACpB,KAAQ,EAAKzB,MAAMjC,KACnB,OAAU,EAAKvB,MAAM+F,SAASvC,MAAMgC,QAG3C9D,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACEA,EAAS6D,IAET,EAAKxF,MAAMuH,QAAQC,KAAK,CACpBzG,SAAU,UAHAe,MAAMH,EAASI,YAOpCK,OAAM,SAACC,GACJP,MAAM,oBAAsBO,OAxChC,EAAKmB,MAAQ,CACTyB,MAAO,EAAKjF,MAAM+F,SAASvC,MAAMyB,MACjC1D,KAAM,EAAKvB,MAAM+F,SAASvC,MAAMjC,MAGpC,EAAKkH,aAAe,EAAKA,aAAahF,KAAlB,gBACpB,EAAK8E,YAAc,EAAKA,YAAY9E,KAAjB,gBACnB,EAAK+E,WAAa,EAAKA,WAAW/E,KAAhB,gBATH,E,0CA8CnB,WACI,OACI,mCACI,eAACzC,EAAA,EAAD,WACI,oBAAI4C,UAAU,cAAd,yBACA,eAAC3C,EAAA,EAAD,CAAMC,SAAU2C,KAAK4E,aAArB,UACI,eAACxH,EAAA,EAAKqB,MAAN,CAAYC,UAAU,+BAAtB,UACI,cAACtB,EAAA,EAAKuB,MAAN,qBACA,cAACvB,EAAA,EAAKwB,QAAN,CAAciG,GAAG,WAAWC,KAAM,EAAG/H,MAAOiD,KAAKL,MAAMyB,MAAOtC,SAAUkB,KAAK0E,cAC7E,uBACA,cAACtH,EAAA,EAAKuB,MAAN,oBACA,cAACvB,EAAA,EAAKwB,QAAN,CAAciG,GAAG,WAAWC,KAAM,EAAG/H,MAAOiD,KAAKL,MAAMjC,KAAMoB,SAAUkB,KAAK2E,gBAEhF,uBACJ,qBAAK5E,UAAU,gCAAf,SACA,cAACZ,EAAA,EAAD,CAAQC,QAAQ,UAAStD,KAAK,SAA9B,kC,GA9DKoE,IAAMC,WCsGhB6E,E,kDApGX,WAAY7I,GAAQ,IAAD,8BACf,cAAMA,IAgBV8I,eAAiB,SAACrI,GACd,EAAK4C,SAAS,CAAC9D,SAAUkB,EAAMC,OAAOE,SAlBvB,EAqBnBmI,eAAiB,SAACtI,GACd,EAAK4C,SAAS,CAACjD,SAAUK,EAAMC,OAAOE,SAtBvB,EAyBnBoI,2BAA6B,SAACvI,GAC1B,EAAK4C,SAAS,CAAC4F,qBAAsBxI,EAAMC,OAAOE,SA1BnC,EA6BnBsI,YAAc,SAACzI,GACX,EAAK4C,SAAS,CAAChD,MAAOI,EAAMC,OAAOE,SA9BpB,EAiCnB6H,aAAe,SAAChI,GACZA,EAAMU,iBACNC,MAAM,eAAgB,CAClBC,OAAQ,QACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,MAASS,aAAaiD,QAAQ,SAC9B,OAAUnD,eAAemD,QAAQ,OACjC,SAAY,EAAK3B,MAAMjE,SACvB,MAAS,EAAKiE,MAAMnD,MACpB,SAAY,EAAKmD,MAAMpD,aAG9BsB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACqB,MAApBA,EAASE,OACRC,MAAMH,EAASE,QAEV,EAAK2B,MAAMpD,WAAa,EAAKoD,MAAMyF,sBACxCnH,MAAM,0BACNgE,OAAOC,SAASC,QAAO,KAGvBhE,eAAeC,QAAQ,WAAYN,EAASpC,UAC5C,EAAK8D,SAAS,CAAEnD,UAAU,QAGjCkC,OAAM,SAACC,GACJP,MAAM,yBA3DV,EAAK0B,MAAQ,CACTtD,UAAU,EACVX,SAAUyC,eAAemD,QAAQ,YACjC/E,SAAU,GACV6I,qBAAsB,GACtB5I,MAAO,IAGX,EAAKyI,eAAiB,EAAKA,eAAerF,KAApB,gBACtB,EAAKsF,eAAiB,EAAKA,eAAetF,KAApB,gBACtB,EAAKuF,2BAA6B,EAAKA,2BAA2BvF,KAAhC,gBAClC,EAAKyF,YAAc,EAAKA,YAAYzF,KAAjB,gBACnB,EAAKgF,aAAe,EAAKA,aAAahF,KAAlB,gBAdL,E,0CAkEnB,WACI,OAAII,KAAKL,MAAMtD,SAEX,cAAC,IAAD,CAAUY,GAAI,CACVC,SAAU,WAId,eAACC,EAAA,EAAD,WACI,oBAAI4C,UAAU,cAAd,yBACA,eAAC3C,EAAA,EAAD,CAAMC,SAAU2C,KAAK4E,aAArB,UACI,eAACxH,EAAA,EAAKqB,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACtB,EAAA,EAAKuB,MAAN,uBACA,cAACvB,EAAA,EAAKwB,QAAN,CAAc9C,KAAK,OAAOiB,MAAOiD,KAAKL,MAAMjE,SAAUoD,SAAUkB,KAAKiF,oBAEzE,eAAC7H,EAAA,EAAKqB,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACtB,EAAA,EAAKuB,MAAN,4BACA,cAACvB,EAAA,EAAKwB,QAAN,CAAc9C,KAAK,QAAQiB,MAAOiD,KAAKL,MAAMnD,MAAOsC,SAAUkB,KAAKqF,iBAEvE,eAACjI,EAAA,EAAKqB,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACtB,EAAA,EAAKuB,MAAN,uBACA,cAACvB,EAAA,EAAKwB,QAAN,CAAc9C,KAAK,WAAWiB,MAAOiD,KAAKL,MAAMpD,SAAUuC,SAAUkB,KAAKkF,eAAgBnG,UAAQ,IACjG,cAAC3B,EAAA,EAAKuB,MAAN,+BACA,cAACvB,EAAA,EAAKwB,QAAN,CAAc9C,KAAK,WAAWiB,MAAOiD,KAAKL,MAAMyF,qBAAsBtG,SAAUkB,KAAKmF,2BAA4BpG,UAAQ,OAE7H,cAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUtD,KAAK,SAA/B,8B,GA5FKoE,IAAMC,WCyChBmF,G,wDA9Bb,WAAYnJ,GAAQ,uCACZA,G,0CAGT,WACC,OACC,sBAAK4D,UAAU,MAAf,UACC,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOwF,OAAK,EAACC,KAAK,IAAIC,UAAWnG,IACxB,cAAC,IAAD,CAAOkG,KAAK,aAAaC,UAAWjB,IAC7C,qCACC,cAAC,EAAD,IACA,cAAC,IAAD,CAAOgB,KAAK,QAAQE,OAAQ,SAACvJ,GAAD,OAAW,cAAC,EAAD,eAAUA,OACjD,cAAC,IAAD,CAAOqJ,KAAK,SAASE,OAAQ,SAACvJ,GAAD,OAAW,cAAC,EAAD,eAAWA,OAEnD,cAAC,IAAD,CAAOqJ,KAAK,WAAWE,OAAQ,SAACvJ,GAAD,OAAW,cAAC,EAAD,eAAaA,OACvD,cAAC,IAAD,CAAOqJ,KAAK,cAAcE,OAAQ,SAACvJ,GAAD,OAAW,cAAC,EAAD,eAAgBA,OAC7D,cAAC,IAAD,CAAOqJ,KAAK,cAAcE,OAAQ,SAACvJ,GAAD,OAAW,cAAC,EAAD,eAAgBA,eAIhE,qBAAK4D,UAAU,MAAf,SACC,cAAC,EAAD,a,GAxBaG,IAAMC,Y,SCblBwF,GAAe,CACjBjK,cAAUkK,EACVjK,QAAIiK,EACJhK,WAAOgK,G,SCILvF,GAAQwF,cDDC,WAAmC,IAAlClG,EAAiC,uDAAzBgG,GAAcG,EAAW,uCAC7C,OAAQA,EAAOhK,MACX,KAAKP,EACD,OAAO,2BACAoE,GADP,IAEIjE,SAAUoK,EAAO/J,SAASL,SAC1BC,GAAImK,EAAO/J,SAASJ,GACpBC,MAAOkK,EAAO/J,SAASH,QAE/B,KAAKJ,EACD,OAAO,eACAmK,IAGf,OAAOhG,ICb6BoG,aAAgBC,OAGxDC,IAASP,OACL,cAAC,IAAD,CAAUrF,MAAOA,GAAjB,SACI,cAAC,EAAD,MAEJ6F,SAASC,eAAe,W","file":"static/js/main.272a47e8.chunk.js","sourcesContent":["export const LOGIN_USER = 'LOGIN_USER'\r\nexport const LOGOUT_USER = 'LOGOUT_USER'\r\n\r\nexport const logoutUser = (id) => {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: LOGOUT_USER,\r\n                userData: { id }\r\n            })\r\n        }\r\n\r\n        catch (err) {\r\n            throw new Error('error in logout user!')\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginUser = (username, id, token) => {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: LOGIN_USER,\r\n                userData: { username, id, token }\r\n            })\r\n        }\r\n\r\n        catch (err) {\r\n            throw new Error('error in login user!')\r\n        }\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button, Container } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport * as usersActions from '../../store/actions/users'\r\n\r\nconst SignIn = (props) => {\r\n\tconst [redirect, redirectHandler] = useState(false)\r\n\tconst [inputValues, setInputValues] = useState({\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t\temail: '',\r\n\t})\r\n\r\n\tconst handleOnChange = (event) => {\r\n\t\tconst { name, value } = event.target\r\n\t\tsetInputValues({ ...inputValues, [name]: value })\r\n\t}\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tfetch('/signin', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t...inputValues,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 400) {\r\n\t\t\t\t\talert(response.message)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsessionStorage.setItem('username', response.username)\r\n\t\t\t\t\tsessionStorage.setItem('_id', response.id)\r\n\t\t\t\t\tlocalStorage.setItem('token', response.token)\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tusersActions.loginUser(\r\n\t\t\t\t\t\t\tinputValues.username,\r\n\t\t\t\t\t\t\tresponse.id,\r\n\t\t\t\t\t\t\tresponse.token\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t\tredirectHandler(true)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert('An error occured!')\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (redirect)\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/blog',\r\n\t\t\t\t\tprops: { username: inputValues.username },\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\telse\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group controlId='user-username'>\r\n\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tplaceholder='Enter username'\r\n\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group controlId='user-email'>\r\n\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Text style={{ color: '#55633e' }}>\r\n\t\t\t\t\t\t\tWe'll never share your email with anyone else.\r\n\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group controlId='user-password'>\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Text style={{ color: '#55633e' }}>\r\n\t\t\t\t\t\t\tMust include 6 characters\r\n\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button variant='primary' type='submit'>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t)\r\n}\r\n\r\nexport default SignIn\r\n","import React, { useReducer, useState } from 'react'\r\nimport { Form, Button, Container } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector, useDispatch, useStore } from 'react-redux'\r\n\r\nimport * as usersActions from '../../store/actions/users'\r\n\r\nconst LogIn = (props) => {\r\n\tconst [redirect, redirectHandler] = useState(false)\r\n\tconst [inputValues, setInputValues] = useState({\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t})\r\n\r\n\tconst handleOnChange = (event) => {\r\n\t\tconst { name, value } = event.target\r\n\t\tsetInputValues({ ...inputValues, [name]: value })\r\n\t}\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tfetch('/login', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t...inputValues,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (!response.username) alert('Username/Password are not correct.')\r\n\t\t\t\telse {\r\n\t\t\t\t\tsessionStorage.setItem('username', inputValues.username)\r\n\t\t\t\t\tsessionStorage.setItem('_id', response.id)\r\n\t\t\t\t\tlocalStorage.setItem('token', response.token)\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tusersActions.loginUser(\r\n\t\t\t\t\t\t\tinputValues.username,\r\n\t\t\t\t\t\t\tresponse.id,\r\n\t\t\t\t\t\t\tresponse.token\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t\tredirectHandler(true)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (redirect)\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/blog',\r\n\t\t\t\t\tprops: { username: inputValues.username },\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\telse\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group controlId='user-username'>\r\n\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\tplaceholder='Enter username'\r\n\t\t\t\t\t\t\t// value={this.state.username}\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group controlId='user-password'>\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\t// value={this.state.password}\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button variant='primary' type='submit'>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t)\r\n}\r\n\r\nexport default LogIn\r\n","import React from 'react';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport SignIn from './main-components/sign-in'\r\nimport LogIn from './main-components/log-in'\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showLogIn: true\r\n        }\r\n\r\n        this.onSignInClick = this.onSignInClick.bind(this)\r\n        this.onLogInClick = this.onLogInClick.bind(this)\r\n    }\r\n\r\n    onSignInClick = () => {\r\n        this.setState({showLogIn: false})\r\n    }\r\n\r\n    onLogInClick = () => {\r\n        this.setState({showLogIn: true})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ButtonGroup size=\"lg\" className=\"main-btns\" aria-label=\"Basic example\">\r\n                    <Button className={this.state.showLogIn ? \"active-btn\": \"\"} onClick={this.onLogInClick}>Log-In</Button>\r\n                    <Button className={!this.state.showLogIn ? \"active-btn\": \"\"} onClick={this.onSignInClick}>Sign-In</Button>\r\n                </ButtonGroup>\r\n                {this.state.showLogIn ? <LogIn/> : <SignIn/>}\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Main","import React, { useState } from 'react'\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport { useSelector, useStore } from 'react-redux'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport '../css/navbar.css'\r\n\r\nconst NavBar = (props) => {\r\n\tconst store = useStore()\r\n\r\n\tconst [redirectHome, redirectHomeHandler] = useState(false)\r\n\tconst LoggedUser = store.getState().username\r\n\r\n\tconst RedirectToHomePage = () => {\r\n\t\tfetch('/logout/' + LoggedUser, {\r\n\t\t\tmethod: 'GET',\r\n\t\t}) //logout user - delete tokens\r\n\t\t\t.then(\r\n\t\t\t\tsessionStorage.removeItem('username'),\r\n\t\t\t\tlocalStorage.removeItem('token'),\r\n\t\t\t\tredirectHomeHandler(true)\r\n\t\t\t)\r\n\t}\r\n\r\n\t// const handleRedirectToUpdateUser = () => {\r\n\t// \tredirectToUpdateHandler(true)\r\n\t// }\r\n\r\n\tconst handleDeleteUser = () => {\r\n\t\tfetch('/delete/myuser', {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({ \r\n\t\t\t\t\"token\": localStorage.getItem(\"token\"),\r\n\t\t\t\tusername: LoggedUser\r\n\t\t\t }),\r\n\t\t})\r\n\t\t\t.then(RedirectToHomePage())\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (redirectHome) {\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\t// if (redirectHome) {\r\n\t// \treturn (\r\n\t// \t\t<Redirect\r\n\t// \t\t\tto={{\r\n\t// \t\t\t\tpathname: '/',\r\n\t// \t\t\t}}\r\n\t// \t\t/>\r\n\t// \t)\r\n\t// }\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{console.log(store.getState())}\r\n\t\t\t<Navbar variant='dark'>\r\n\t\t\t\t<Navbar.Brand>\r\n\t\t\t\t\tBlog-App\r\n\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t<Nav className='mr-auto'>\r\n\t\t\t\t\t{/* <Nav.Link href=\"/blog\">Blog</Nav.Link>\r\n            <Nav.Link href=\"/chat\">Chat</Nav.Link>\r\n            <Nav.Link href=\"/about\">About</Nav.Link> */}\r\n\t\t\t\t</Nav>\r\n\t\t\t\t<Navbar.Collapse className='justify-content-end'>\r\n\t\t\t\t\t<Navbar.Text>Signed in as:</Navbar.Text>\r\n\t\t\t\t\t<NavDropdown title={LoggedUser} id='nav-dropdown'>\r\n\t\t\t\t\t\t<NavDropdown.Item>\r\n\t\t\t\t\t\t\t<Link to='./updateUser' className='link'>\r\n\t\t\t\t\t\t\t\tUpdate user\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item onClick={handleDeleteUser}>\r\n\t\t\t\t\t\t\tDelete user\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item onClick={RedirectToHomePage}>\r\n\t\t\t\t\t\t\tLog-out\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t\t<br />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react';\r\nimport { AiFillLike } from 'react-icons/ai';\r\nimport '../../../css/like.css'\r\n\r\nclass Like extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            totalLikes: this.props.totalLikes,\r\n            clicked: false\r\n        }\r\n        fetch('/posts/check-like', {\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"userID\": sessionStorage.getItem(\"_id\"),\r\n                \"postID\": this.props._id,\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            this.setState({\r\n                clicked: response.value\r\n            })\r\n        })\r\n        .catch(error => alert(\"An error occured!\"))\r\n\r\n        this.UpdateLikes = this.UpdateLikes.bind(this)\r\n    }\r\n\r\n    UpdateLikes = () => {\r\n        this.setState({\r\n            clicked: !this.state.clicked,\r\n            totalLikes: (!this.state.clicked) ? this.state.totalLikes + 1 :  \r\n            (this.state.totalLikes && this.state.clicked) ? this.state.totalLikes - 1 : \r\n            this.state.totalLikes  \r\n        })\r\n        \r\n        fetch('/posts/update-likes', {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"postID\": this.props._id,\r\n                \"userID\": sessionStorage.getItem(\"_id\"),\r\n                \"totalLikes\": this.state.totalLikes\r\n            })\r\n        })\r\n        .catch(error => alert(\"An error occured!\"))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Like\">\r\n                <AiFillLike className={!this.state.clicked ? \"like-btn\" : \"clicked-like\"} onClick={this.UpdateLikes}/>\r\n                <span> {this.state.totalLikes}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Like","import React from 'react';\r\nimport { Card, Accordion, Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Like from './post-components/like'\r\nimport '../../css/post.css' \r\n\r\nvar key = 0\r\n\r\nclass Post extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.key = 0\r\n        this.state = {\r\n            redirectToUpdate: false\r\n        }\r\n\r\n        this.userButtons = this.userButtons.bind(this)\r\n        this.deletePost = this.deletePost.bind(this)\r\n        this.redirectToUpdatePost = this.redirectToUpdatePost.bind(this)\r\n    }\r\n\r\n    deletePost = () => {\r\n        fetch(`/posts/${this.props._id}`, {\r\n            method: 'DELETE',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\")\r\n            })\r\n        })\r\n        .then((res) => {\r\n            if( res.status === 404 || res.status === 500) {\r\n                alert(res.statusText)\r\n            }\r\n            else {\r\n                alert(`Post ${this.props.title} deleted successfully.`)\r\n                window.location.reload(false)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(error)\r\n        })\r\n    }\r\n\r\n    redirectToUpdatePost = () => {\r\n        this.setState({\r\n            redirectToUpdate: true\r\n        })\r\n    }\r\n\r\n    userButtons = () => {\r\n        if (sessionStorage.getItem('_id') === (this.props.author)) {\r\n            return (\r\n                <>\r\n                    <Button variant=\"secondary\" size=\"sm\" onClick={this.redirectToUpdatePost}>Update Post</Button>\r\n                    <Button variant=\"danger\" size=\"sm\"  onClick={this.deletePost}>Delete Post</Button>\r\n                </>\r\n            )\r\n        }\r\n        return null\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirectToUpdate)\r\n            return (\r\n            <Redirect to={{\r\n                pathname: '/updatePost',\r\n                state: {  \r\n                _id: this.props._id,\r\n                body: this.props.body, \r\n                title: this.props.title }\r\n            }}/>\r\n            )\r\n        return (\r\n            <>\r\n            <Card className=\"post-card\">\r\n            <Card.Header>\r\n                <Accordion.Toggle className=\"post-btn\" eventKey={(++key).toString()}>\r\n                    <b>{this.props.authorName}</b> { \"|\" } {this.props.title}\r\n                </Accordion.Toggle>\r\n            </Card.Header>\r\n                <Accordion.Collapse eventKey={(key).toString()}>\r\n                    <Card.Body>\r\n                        <p>\r\n                            {this.props.body}\r\n                        </p>\r\n                        <br/>\r\n                        <div className=\"post-sub-btns\">\r\n                            {this.userButtons()}\r\n                            <Like \r\n                                _id = {this.props._id}  \r\n                                author = {this.props.author}\r\n                                totalLikes = {this.props.likes}\r\n                            />\r\n                        </div>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            </>\r\n        );\r\n    };\r\n };\r\n\r\n export default Post\r\n\r\n\r\n","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport Post from '../../blog-components/post'\r\nimport '../../../css/blog.css'\r\n\r\nclass Posts extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                   {\r\n                        this.props.postslist.filter((post) => post.title.includes(this.props.text) || \r\n                        post.body.includes(this.props.text))\r\n                            .map((post) => {\r\n                            return (\r\n                                <Accordion>\r\n                                    <Post \r\n                                        _id = {post._id} \r\n                                        body = {post.body} \r\n                                        author = {post.author} \r\n                                        authorName = {post.authorName}\r\n                                        title = {post.title}\r\n                                        likes = {post.likes}\r\n                                    />\r\n                                </Accordion>\r\n                            )\r\n                        })\r\n                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Posts","import React from 'react'\r\nimport {\r\n\tJumbotron,\r\n\tContainer,\r\n\tButton,\r\n\tInputGroup,\r\n\tFormControl,\r\n} from 'react-bootstrap'\r\nimport Navbar from './navbar'\r\nimport '../css/blog.css'\r\nimport '../css/loading.css'\r\nimport Posts from './blog-components/general-components/postsList'\r\n\r\nclass Blog extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tposts: null,\r\n\t\t\ttext: '',\r\n\t\t}\r\n\r\n\t\tfetch('/posts/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tposts: data,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert('An error occured!')\r\n\t\t\t})\r\n\r\n\t\tthis.redirectToAddPost = this.redirectToAddPost.bind(this)\r\n\t\tthis.handleSearch = this.handleSearch.bind(this)\r\n\t}\r\n\r\n\tredirectToAddPost = () => {\r\n\t\tthis.props.history.push('/addPost')\r\n\t}\r\n\r\n\thandleSearch = (event) => {\r\n\t\tthis.setState({\r\n\t\t\ttext: event.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.posts)\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Container className='text-center'>\r\n\t\t\t\t\t\t<Jumbotron fluid>\r\n\t\t\t\t\t\t\t<h1>Welcome!</h1>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tIn this blog you can share with the network everything you want!\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<InputGroup size='sm search'>\r\n\t\t\t\t\t\t\t<InputGroup.Prepend className='d-flex justify-content-center'>\r\n\t\t\t\t\t\t\t\t<InputGroup.Text>Search</InputGroup.Text>\r\n\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\taria-label='Small'\r\n\t\t\t\t\t\t\t\tplaceholder='Enter text here!'\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearch}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div className='d-flex justify-content-center'>\r\n\t\t\t\t\t\t\t<Button onClick={this.redirectToAddPost}>Add new post</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t\t<Posts postslist={this.state.posts} text={this.state.text} />\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\telse\r\n\t\t\treturn (\r\n\t\t\t\t<div id='loading'>\r\n\t\t\t\t\tLoading\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className='dot' />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react';\r\nimport Navbar from './navbar'\r\n\r\n\r\nclass About extends React.Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h2>About</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport { AiFillGithub, AiFillLinkedin} from 'react-icons/ai';\r\nimport '../css/footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <hr/>\r\n                <div className=\"footer-elements d-flex justify-content-center\">\r\n                    <p>Created By: Yehonatan Hen - &nbsp;</p>\r\n                    <a href=\"https://www.linkedin.com/in/yehonatan-hen/\" target=\"_blank\" rel=\"noopener noreferrer\"><AiFillLinkedin size=\"25\"/></a>\r\n                    <a href=\"https://github.com/YehonatanHen\" target=\"_blank\" rel=\"noopener noreferrer\"><AiFillGithub size=\"25\"/></a>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport Navbar from './navbar'\r\n\r\n\r\nclass Chat extends React.Component {\r\n    render(){\r\n        return (\r\n            <>\r\n                <Navbar/>\r\n                <h2>Chat</h2>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat","import React from 'react';\r\n\r\nexport default function authError(){\r\n    return (\r\n        <> \r\n            <h1>You are not authenticated!</h1>\r\n            <a href='/'>Log-in/Sign-in</a>\r\n        </>\r\n    )\r\n};","import React from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\n\r\nclass AddPost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: '',\r\n            body: ''\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleTitle = this.handleTitle.bind(this)\r\n        this.handleBody = this.handleBody.bind(this)\r\n    }\r\n\r\n    handleTitle = (event) => {\r\n        this.setState({title: event.target.value})\r\n    }\r\n\r\n    handleBody = (event) => {\r\n        this.setState({body: event.target.value})\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/add-post', {\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\"),\r\n                \"title\": this.state.title,\r\n                \"body\": this.state.body,\r\n                \"author\": sessionStorage.getItem(\"_id\"), //_id value saved in storage when user login/signin\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if(response.status === 400) {\r\n                alert(response.message)\r\n            }\r\n            else if(!response._id) alert(response.message)\r\n            else {\r\n                this.props.history.push({\r\n                    pathname: '/blog',\r\n                })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(\"An error occured!\")\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <h1 className=\"text-center\">Add new post</h1>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Title:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={1} value={this.state.title} onChange={this.handleTitle}/>\r\n                            <br/>\r\n                            <Form.Label>body:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} value={this.state.body} onChange={this.handleBody}/>\r\n                        </Form.Group>\r\n                        <br/>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                    <Button variant=\"primary\"type=\"submit\">Add</Button>\r\n                    </div>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n        );\r\n   }; \r\n}\r\n\r\nexport default AddPost","import React from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport Navbar from '../navbar'\r\n\r\nclass updatePost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: this.props.location.state.title,\r\n            body: this.props.location.state.body\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleTitle = this.handleTitle.bind(this)\r\n        this.handleBody = this.handleBody.bind(this)\r\n    }\r\n\r\n    handleTitle = (event) => {\r\n        this.setState({title: event.target.value})\r\n    }\r\n\r\n    handleBody = (event) => {\r\n        this.setState({body: event.target.value})\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/posts/update-post', {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\"),\r\n                \"title\": this.state.title,\r\n                \"body\": this.state.body,\r\n                \"postID\": this.props.location.state._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if(!response._id) alert(response.message)\r\n            else {\r\n                this.props.history.push({\r\n                    pathname: '/blog',\r\n                })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(\"An error occured!\" + error) \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <h1 className=\"text-center\">Update post</h1>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Title:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={1} value={this.state.title} onChange={this.handleTitle}/>\r\n                            <br/>\r\n                            <Form.Label>body:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} value={this.state.body} onChange={this.handleBody}/>\r\n                        </Form.Group>\r\n                        <br/>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                    <Button variant=\"primary\"type=\"submit\">Update</Button>\r\n                    </div>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n        );\r\n   }; \r\n}\r\n\r\nexport default updatePost","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass UpdateUser extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            username: sessionStorage.getItem(\"username\"),\r\n            password: '',\r\n            passwordConfirmation: '',\r\n            email: ''\r\n        }\r\n\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.handlePasswordConfirmation = this.handlePasswordConfirmation.bind(this)\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleUsername = (event) => {\r\n        this.setState({username: event.target.value});\r\n    }\r\n\r\n    handlePassword = (event) => {\r\n        this.setState({password: event.target.value}); \r\n    }\r\n\r\n    handlePasswordConfirmation = (event) => {\r\n        this.setState({passwordConfirmation: event.target.value}); \r\n    }\r\n\r\n    handleEmail = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/update-user', {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\"),\r\n                \"userID\": sessionStorage.getItem(\"_id\"), \r\n                \"username\": this.state.username,\r\n                \"email\": this.state.email,\r\n                \"password\": this.state.password\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if(response.status === 400) {\r\n                alert(response.status)\r\n            }\r\n            else if (this.state.password !== this.state.passwordConfirmation) {\r\n                alert(\"Passwords don't match!\")\r\n                window.location.reload(false); //Refreshing page\r\n            }\r\n            else {\r\n                sessionStorage.setItem(\"username\", response.username)              \r\n                this.setState({ redirect: true })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(\"An error occured!\")\r\n        })\r\n    }\r\n    \r\n\r\n    render () {\r\n        if (this.state.redirect)\r\n            return (\r\n            <Redirect to={{\r\n                pathname: '/blog',\r\n            }}/>\r\n            )\r\n        else return (\r\n            <Container>\r\n                <h1 className=\"text-center\">Update user</h1>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId=\"user-username\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" value={this.state.username} onChange={this.handleUsername} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"user-email\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" value={this.state.email} onChange={this.handleEmail} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"user-password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" value={this.state.password} onChange={this.handlePassword} required/>\r\n                        <Form.Label>Confirm password</Form.Label>\r\n                        <Form.Control type=\"password\" value={this.state.passwordConfirmation} onChange={this.handlePasswordConfirmation} required/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button >\r\n                </Form>\r\n            </Container>\r\n        );\r\n    };\r\n};\r\n\r\nexport default UpdateUser\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Main from './components/main'\r\nimport Blog from './components/blog'\r\nimport About from './components/about'\r\nimport Chat from './components/chat'\r\nimport Footer from './components/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport authError from './components/authError'\r\nimport AddPost from './components/addPost'\r\nimport UpdatePost from './components/update-components/updatePost'\r\nimport UpdateUser from './components/update-components/updateUser'\r\nimport NavBar from './components/navbar'\r\nimport './css/app.css'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='app'>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path='/' component={Main} />\r\n           \t\t\t\t<Route path='/authError' component={authError} />\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<NavBar />\r\n\t\t\t\t\t\t\t<Route path='/blog' render={(props) => <Blog {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/about' render={(props) => <About {...props}/>} />\r\n\t\t\t\t\t\t\t{/* <Route path='/chat'  render={() => <Chat />} /> */}\r\n\t\t\t\t\t\t\t<Route path='/addPost' render={(props) => <AddPost {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/updatePost' render={(props) => <UpdatePost {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/updateUser' render={(props) => <UpdateUser {...props}/>} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t\t<div className='gap'>\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App\r\n","import { LOGIN_USER, LOGOUT_USER } from '../actions/users'\r\n\r\nconst initialState = {\r\n    username: undefined,\r\n    id: undefined,\r\n    token: undefined\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return {\r\n                ...state,\r\n                username: action.userData.username,\r\n                id: action.userData.id,\r\n                token: action.userData.token,\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...initialState\r\n            }\r\n    }\r\n    return state\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux'\r\nimport usersReducer from './store/reducers/users'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\n\r\nconst store = createStore(usersReducer, applyMiddleware(ReduxThunk));\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}