{"version":3,"sources":["components/main-components/sign-in.jsx","store/actions/users.js","components/main-components/log-in.jsx","components/main.jsx","components/navbar.jsx","components/blog-components/post-components/like.jsx","components/blog-components/post.jsx","components/blog-components/general-components/postsList.jsx","components/blog.jsx","components/about.jsx","components/footer.jsx","components/chat.jsx","components/authError.jsx","components/addPost.jsx","components/update-components/updatePost.jsx","components/update-components/updateUser.jsx","app.jsx","store/reducers/users.js","index.js"],"names":["SignIn","props","useState","redirect","redirectHandler","username","password","email","inputValues","setInputValues","handleOnChange","event","target","name","value","to","pathname","Container","Form","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","status","alert","message","sessionStorage","setItem","id","catch","error","console","log","Group","controlId","Label","Control","type","placeholder","onChange","required","Text","style","color","Button","variant","LOGIN_USER","LOGOUT_USER","LogIn","dispatch","useDispatch","store","useStore","token","localStorage","userData","err","Error","getState","Main","onSignInClick","setState","showLogIn","onLogInClick","state","bind","ButtonGroup","size","className","this","onClick","React","Component","NavBar","redirectHome","redirectHomeHandler","LoggedUser","RedirectToHomePage","removeItem","Navbar","Brand","Nav","Collapse","NavDropdown","title","Item","getItem","Like","UpdateLikes","clicked","totalLikes","_id","key","Post","deletePost","res","statusText","window","location","reload","redirectToUpdatePost","redirectToUpdate","userButtons","author","Card","Header","Accordion","Toggle","eventKey","toString","authorName","Body","likes","Posts","postslist","filter","post","includes","text","map","Blog","redirectToAddPost","history","push","handleSearch","posts","data","Jumbotron","fluid","InputGroup","Prepend","FormControl","About","Footer","href","rel","authError","AddPost","handleTitle","handleBody","handleSubmit","as","rows","updatePost","UpdateUser","handleUsername","handlePassword","handlePasswordConfirmation","passwordConfirmation","handleEmail","App","exact","path","component","render","initialState","undefined","createStore","action","applyMiddleware","ReduxThunk","ReactDOM","document","getElementById"],"mappings":"8ZAkFeA,EA9EA,SAAAC,GACX,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KACH,EAAsCF,mBAAS,CAC9CG,SAAU,GACVC,SAAU,GACJC,MAAO,KAHd,mBAAOC,EAAP,KAAoBC,EAApB,KAMSC,EAAiB,SAACC,GAC1B,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdL,EAAe,2BAAKD,GAAN,kBAAoBK,EAAOC,MAgCvC,OAAIX,EAEA,cAAC,IAAD,CAAUY,GAAI,CACVC,SAAU,QACVf,MAAO,CAAEI,SAAUG,EAAYH,aAInC,cAACY,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,SApCO,SAACR,GAClBA,EAAMS,iBACNC,MAAM,UAAW,CACbC,OAAQ,OACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAL,eACClB,MAGVmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACqB,MAApBA,EAASE,OACRC,MAAMH,EAASI,UAGfC,eAAeC,QAAQ,WAAYN,EAASvB,UAC5C4B,eAAeC,QAAQ,MAAON,EAASO,IACvC/B,GAAgB,OAGvBgC,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZN,MAAM,yBAcN,UACI,eAACb,EAAA,EAAKsB,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACvB,EAAA,EAAKwB,MAAN,uBACA,cAACxB,EAAA,EAAKyB,QAAN,CAAcC,KAAK,OAAOC,YAAY,iBAAiBhC,KAAK,WAAWiC,SAAUpC,EAAgBqC,UAAQ,OAE7G,eAAC7B,EAAA,EAAKsB,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACvB,EAAA,EAAKwB,MAAN,4BACA,cAACxB,EAAA,EAAKyB,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAchC,KAAK,QAAQiC,SAAUpC,EAAgBqC,UAAQ,IACpG,cAAC7B,EAAA,EAAK8B,KAAN,CAAWC,MAAO,CAACC,MAAM,WAAzB,+DAIJ,eAAChC,EAAA,EAAKsB,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACvB,EAAA,EAAKwB,MAAN,uBACA,cAACxB,EAAA,EAAKyB,QAAN,CAAcC,KAAK,WAAWC,YAAY,iBAAiBhC,KAAK,WAAWiC,SAAUpC,EAAgBqC,UAAQ,IAC7G,cAAC7B,EAAA,EAAK8B,KAAN,CAAWC,MAAO,CAACC,MAAM,WAAzB,0CAIJ,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUR,KAAK,SAA/B,0B,QC1EHS,EAAa,aACbC,EAAc,cCgGZC,EA1FD,SAACtD,GACd,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,CAC9CG,SAAU,GACVC,SAAU,KAFX,mBAAOE,EAAP,KAAoBC,EAApB,KAKMC,EAAiB,SAACC,GACvB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdL,EAAe,2BAAKD,GAAN,kBAAoBK,EAAOC,MAGpC0C,EAAWC,cACXC,EAAQC,cAmCd,OAAIxD,EAEF,cAAC,IAAD,CACCY,GAAI,CACHC,SAAU,QACVf,MAAO,CAAEI,SAAUG,EAAYH,aAMjC,cAACY,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,CAAMC,SA7CY,SAACR,GACrBA,EAAMS,iBACNC,MAAM,SAAU,CACfC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAL,eACFlB,MAGHmB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GDde,IAACvB,EAAU8B,EAAIyB,ECe/BhC,EAASvB,UAEb4B,eAAeC,QAAQ,WAAY1B,EAAYH,UAC/C4B,eAAeC,QAAQ,MAAON,EAASO,IACvC0B,aAAa3B,QAAQ,QAASN,EAASgC,OACvCJ,GDpBqBnD,ECsBnBG,EAAYH,SDtBiB8B,ECuB7BP,EAASO,GDvBwByB,ECwBjChC,EAASgC,MDvBL,SAAAJ,GACH,IACIA,EAAS,CACLZ,KAAMS,EACNS,SAAU,CAAEzD,WAAU8B,KAAIyB,WAIlC,MAAOG,GACH,MAAM,IAAIC,MAAM,4BCkBvB1B,QAAQC,IAAImB,EAAMO,YAClB7D,GAAgB,IAdO2B,MAAM,yCAiB9BK,OAAM,SAACC,GACPN,MAAMM,OAgBN,UACC,eAACnB,EAAA,EAAKsB,MAAN,CAAYC,UAAU,gBAAtB,UACC,cAACvB,EAAA,EAAKwB,MAAN,uBACA,cAACxB,EAAA,EAAKyB,QAAN,CACCC,KAAK,OACL/B,KAAK,WACLgC,YAAY,iBAEZC,SAAUpC,EACVqC,UAAQ,OAGV,eAAC7B,EAAA,EAAKsB,MAAN,CAAYC,UAAU,gBAAtB,UACC,cAACvB,EAAA,EAAKwB,MAAN,uBACA,cAACxB,EAAA,EAAKyB,QAAN,CACCC,KAAK,WACL/B,KAAK,WACLgC,YAAY,iBAEZC,SAAUpC,OAGZ,cAACyC,EAAA,EAAD,CAAQC,QAAQ,UAAUR,KAAK,SAA/B,0BCpDUsB,E,kDA/BX,WAAYjE,GAAQ,IAAD,8BACf,cAAMA,IASVkE,cAAgB,WACZ,EAAKC,SAAS,CAACC,WAAW,KAXX,EAcnBC,aAAe,WACX,EAAKF,SAAS,CAACC,WAAW,KAb1B,EAAKE,MAAQ,CACTF,WAAW,GAGf,EAAKF,cAAgB,EAAKA,cAAcK,KAAnB,gBACrB,EAAKF,aAAe,EAAKA,aAAaE,KAAlB,gBAPL,E,0CAkBnB,WACI,OACI,qCACI,eAACC,EAAA,EAAD,CAAaC,KAAK,KAAKC,UAAU,YAAY,aAAW,gBAAxD,UACI,cAACxB,EAAA,EAAD,CAAQwB,UAAWC,KAAKL,MAAMF,UAAY,aAAc,GAAIQ,QAASD,KAAKN,aAA1E,oBACA,cAACnB,EAAA,EAAD,CAAQwB,UAAYC,KAAKL,MAAMF,UAA0B,GAAd,aAAkBQ,QAASD,KAAKT,cAA3E,wBAEHS,KAAKL,MAAMF,UAAY,cAAC,EAAD,IAAW,cAAC,EAAD,W,GA1BhCS,IAAMC,W,gDC0FVC,G,MAzFA,SAAC/E,GACf,IAAMyD,EAAQC,cAEd,EAA4CzD,oBAAS,GAArD,mBAAO+E,EAAP,KAAqBC,EAArB,KACMC,EAAazB,EAAMO,WAAW5D,SAE9B+E,EAAqB,WAC1B/D,MAAM,WAAa8D,EAAY,CAC9B7D,OAAQ,QAEPK,KACAM,eAAeoD,WAAW,YAC1BxB,aAAawB,WAAW,SACxBH,GAAoB,KAuBvB,OAAID,GACH3C,QAAQC,IAAImB,EAAMO,YAEjB,cAAC,IAAD,CACClD,GAAI,CACHC,SAAU,QAeb,qCACEsB,QAAQC,IAAImB,EAAMO,YACnB,eAACqB,EAAA,EAAD,CAAQlC,QAAQ,OAAhB,UACC,cAACkC,EAAA,EAAOC,MAAR,uBAGA,cAACC,EAAA,EAAD,CAAKb,UAAU,YAKf,eAACW,EAAA,EAAOG,SAAR,CAAiBd,UAAU,sBAA3B,UACC,cAACW,EAAA,EAAOtC,KAAR,4BACA,eAAC0C,EAAA,EAAD,CAAaC,MAAOR,EAAYhD,GAAG,eAAnC,UACC,cAACuD,EAAA,EAAYE,KAAb,UACC,cAAC,IAAD,CAAM7E,GAAG,eAAe4D,UAAU,OAAlC,2BAID,cAACe,EAAA,EAAYE,KAAb,CAAkBf,QAtDE,WACxBxD,MAAM,iBAAkB,CACvBC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACpB,MAASmC,aAAagC,QAAQ,SAC9BxF,SAAU8E,MAGVxD,KAAKyD,KACLhD,OAAM,SAACC,GACPN,MAAMM,OA2CJ,yBAGA,cAACqD,EAAA,EAAYE,KAAb,CAAkBf,QAASO,EAA3B,8BAMH,4B,sCC9BYU,G,wDAvDX,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IAwBV8F,YAAc,WACV,EAAK3B,SAAS,CACV4B,SAAU,EAAKzB,MAAMyB,QACrBC,WAAc,EAAK1B,MAAMyB,QACxB,EAAKzB,MAAM0B,YAAc,EAAK1B,MAAMyB,QAAW,EAAKzB,MAAM0B,WAAa,EACxE,EAAK1B,MAAM0B,WAFyB,EAAK1B,MAAM0B,WAAa,IAKhE5E,MAAM,sBAAuB,CACzBC,OAAQ,QACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,OAAU,EAAKzB,MAAMiG,IACrB,OAAUjE,eAAe4D,QAAQ,OACjC,WAAc,EAAKtB,MAAM0B,eAGhC7D,OAAM,SAAAC,GAAK,OAAIN,MAAM,yBAxCtB,EAAKwC,MAAQ,CACT0B,WAAY,EAAKhG,MAAMgG,WACvBD,SAAS,GAEb3E,MAAM,oBAAqB,CACvBC,OAAQ,OACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,OAAUO,eAAe4D,QAAQ,OACjC,OAAU,EAAK5F,MAAMiG,QAG5BvE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,EAAKwC,SAAS,CACV4B,QAASpE,EAASd,WAGzBsB,OAAM,SAAAC,GAAK,OAAIN,MAAM,wBAEtB,EAAKgE,YAAc,EAAKA,YAAYvB,KAAjB,gBAtBJ,E,0CA6CnB,WACI,OACI,sBAAKG,UAAU,OAAf,UACI,cAAC,IAAD,CAAYA,UAAYC,KAAKL,MAAMyB,QAAuB,eAAb,WAA6BnB,QAASD,KAAKmB,cACxF,qCAAQnB,KAAKL,MAAM0B,qB,GAlDhBnB,IAAMC,YCErBoB,G,MAAM,GAiGMC,E,kDA9FZ,WAAYnG,GAAQ,IAAD,8BACf,cAAMA,IAWVoG,WAAa,WACThF,MAAM,UAAD,OAAW,EAAKpB,MAAMiG,KAAO,CAC9B5E,OAAQ,SACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,MAASmC,aAAagC,QAAQ,aAGrClE,MAAK,SAAC2E,GACgB,MAAfA,EAAIxE,QAAiC,MAAfwE,EAAIxE,OAC1BC,MAAMuE,EAAIC,aAGVxE,MAAM,QAAD,OAAS,EAAK9B,MAAM0F,MAApB,2BACLa,OAAOC,SAASC,QAAO,OAG9BtE,OAAM,SAACC,GACJN,MAAMM,OA9BK,EAkCnBsE,qBAAuB,WACnB,EAAKvC,SAAS,CACVwC,kBAAkB,KApCP,EAwCnBC,YAAc,WACV,OAAI5E,eAAe4D,QAAQ,SAAY,EAAK5F,MAAM6G,OAE1C,qCACI,cAAC3D,EAAA,EAAD,CAAQC,QAAQ,YAAYsB,KAAK,KAAKG,QAAS,EAAK8B,qBAApD,yBACA,cAACxD,EAAA,EAAD,CAAQC,QAAQ,SAASsB,KAAK,KAAMG,QAAS,EAAKwB,WAAlD,4BAIL,MA/CP,EAAKF,IAAM,EACX,EAAK5B,MAAQ,CACTqC,kBAAkB,GAGtB,EAAKC,YAAc,EAAKA,YAAYrC,KAAjB,gBACnB,EAAK6B,WAAa,EAAKA,WAAW7B,KAAhB,gBAClB,EAAKmC,qBAAuB,EAAKA,qBAAqBnC,KAA1B,gBATb,E,0CAqDnB,WACI,OAAII,KAAKL,MAAMqC,iBAEX,cAAC,IAAD,CAAU7F,GAAI,CACVC,SAAU,cACVuD,MAAO,CACP2B,IAAKtB,KAAK3E,MAAMiG,IAChB1E,KAAMoD,KAAK3E,MAAMuB,KACjBmE,MAAOf,KAAK3E,MAAM0F,UAItB,mCACA,eAACoB,EAAA,EAAD,CAAMpC,UAAU,YAAhB,UACA,cAACoC,EAAA,EAAKC,OAAN,UACI,eAACC,EAAA,EAAUC,OAAX,CAAkBvC,UAAU,WAAWwC,YAAahB,GAAKiB,WAAzD,UACI,4BAAIxC,KAAK3E,MAAMoH,aADnB,IACqC,IADrC,IAC4CzC,KAAK3E,MAAM0F,WAGvD,cAACsB,EAAA,EAAUxB,SAAX,CAAoB0B,SAAWhB,EAAKiB,WAApC,SACI,eAACL,EAAA,EAAKO,KAAN,WACI,4BACK1C,KAAK3E,MAAMuB,OAEhB,uBACA,sBAAKmD,UAAU,gBAAf,UACKC,KAAKiC,cACN,cAAC,EAAD,CACIX,IAAOtB,KAAK3E,MAAMiG,IAClBY,OAAUlC,KAAK3E,MAAM6G,OACrBb,WAAcrB,KAAK3E,MAAMsH,yB,GApFtCzC,IAAMC,WCHnByC,E,4JAEF,WAAU,IAAD,OACL,OACI,mCAEY5C,KAAK3E,MAAMwH,UAAUC,QAAO,SAACC,GAAD,OAAUA,EAAKhC,MAAMiC,SAAS,EAAK3H,MAAM4H,OACrEF,EAAKnG,KAAKoG,SAAS,EAAK3H,MAAM4H,SACzBC,KAAI,SAACH,GACN,OACI,cAACV,EAAA,EAAD,UACI,cAAC,EAAD,CACIf,IAAOyB,EAAKzB,IACZ1E,KAAQmG,EAAKnG,KACbsF,OAAUa,EAAKb,OACfO,WAAcM,EAAKN,WACnB1B,MAASgC,EAAKhC,MACd4B,MAASI,EAAKJ,mB,GAjBlCzC,IAAMC,WA4BXyC,ICyDAO,E,kDA5Ed,WAAY9H,GAAQ,IAAD,8BAClB,cAAMA,IAwBP+H,kBAAoB,WACnB,EAAK/H,MAAMgI,QAAQC,KAAK,aA1BN,EA6BnBC,aAAe,SAACxH,GACf,EAAKyD,SAAS,CACbyD,KAAMlH,EAAMC,OAAOE,SA7BpB,EAAKyD,MAAQ,CACZ6D,MAAO,KACPP,KAAM,IAGPxG,MAAM,UAAW,CAChBC,OAAQ,QAEPK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC0G,GACN,EAAKjE,SAAS,CACbgE,MAAOC,OAGRjG,OAAM,SAACC,GACPC,QAAQC,IAAIF,GACZN,MAAM,wBAGR,EAAKiG,kBAAoB,EAAKA,kBAAkBxD,KAAvB,gBACzB,EAAK2D,aAAe,EAAKA,aAAa3D,KAAlB,gBAtBF,E,0CAmCnB,WACC,OAAII,KAAKL,MAAM6D,MAEb,qCACC,eAACnH,EAAA,EAAD,CAAW0D,UAAU,cAArB,UACC,eAAC2D,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACC,0CACA,oGAID,uBACA,eAACC,EAAA,EAAD,CAAY9D,KAAK,YAAjB,UACC,cAAC8D,EAAA,EAAWC,QAAZ,CAAoB9D,UAAU,gCAA9B,SACC,cAAC6D,EAAA,EAAWxF,KAAZ,uBAED,cAAC0F,EAAA,EAAD,CACC,aAAW,QACX7F,YAAY,mBACZC,SAAU8B,KAAKuD,kBAGjB,uBACA,qBAAKxD,UAAU,gCAAf,SACC,cAACxB,EAAA,EAAD,CAAQ0B,QAASD,KAAKoD,kBAAtB,+BAGF,cAAC,EAAD,CAAOP,UAAW7C,KAAKL,MAAM6D,MAAOP,KAAMjD,KAAKL,MAAMsD,UAKtD,sBAAK1F,GAAG,UAAR,oBAEC,uBACA,qBAAKwC,UAAU,e,GAvEDG,IAAMC,WCTnB4D,E,4JACF,WACI,OACI,8BACI,6C,GAJI7D,IAAMC,WAUX4D,ICVTC,GCAa9D,IAAMC,U,kKDCrB,WACI,OACI,mCACI,uBACA,sBAAKJ,UAAU,gDAAf,UACI,iEACA,mBAAGkE,KAAK,6CAA6CjI,OAAO,SAASkI,IAAI,sBAAzE,SAA+F,cAAC,IAAD,CAAgBpE,KAAK,SACpH,mBAAGmE,KAAK,kCAAkCjI,OAAO,SAASkI,IAAI,sBAA9D,SAAoF,cAAC,IAAD,CAAcpE,KAAK,mB,GARtGI,IAAMC,YAeZ6D,I,MEjBA,SAASG,IACpB,OACI,qCACI,4DACA,mBAAGF,KAAK,IAAR,+B,ICyEGG,E,kDA3EX,WAAY/I,GAAQ,IAAD,8BACf,cAAMA,IAWVgJ,YAAc,SAACtI,GACX,EAAKyD,SAAS,CAACuB,MAAOhF,EAAMC,OAAOE,SAbpB,EAgBnBoI,WAAa,SAACvI,GACV,EAAKyD,SAAS,CAAC5C,KAAMb,EAAMC,OAAOE,SAjBnB,EAoBnBqI,aAAe,SAACxI,GACZA,EAAMS,iBACNC,MAAM,YAAa,CACfC,OAAQ,OACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,MAASmC,aAAagC,QAAQ,SAC9B,MAAS,EAAKtB,MAAMoB,MACpB,KAAQ,EAAKpB,MAAM/C,KACnB,OAAUS,eAAe4D,QAAQ,WAGxClE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACFU,QAAQC,IAAIX,GACW,MAApBA,EAASE,OACRC,MAAMH,EAASI,SAEVJ,EAASsE,IAEd,EAAKjG,MAAMgI,QAAQC,KAAK,CACpBlH,SAAU,UAHKe,MAAMH,EAASI,YAOzCI,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZN,MAAM,yBA7CV,EAAKwC,MAAQ,CACToB,MAAO,GACPnE,KAAM,IAGV,EAAK2H,aAAe,EAAKA,aAAa3E,KAAlB,gBACpB,EAAKyE,YAAc,EAAKA,YAAYzE,KAAjB,gBACnB,EAAK0E,WAAa,EAAKA,WAAW1E,KAAhB,gBATH,E,0CAmDnB,WACI,OACI,mCACI,eAACvD,EAAA,EAAD,WACI,oBAAI0D,UAAU,cAAd,0BACA,eAACzD,EAAA,EAAD,CAAMC,SAAUyD,KAAKuE,aAArB,UACI,eAACjI,EAAA,EAAKsB,MAAN,CAAYC,UAAU,+BAAtB,UACI,cAACvB,EAAA,EAAKwB,MAAN,qBACA,cAACxB,EAAA,EAAKyB,QAAN,CAAcyG,GAAG,WAAWC,KAAM,EAAGvI,MAAO8D,KAAKL,MAAMoB,MAAO7C,SAAU8B,KAAKqE,cAC7E,uBACA,cAAC/H,EAAA,EAAKwB,MAAN,oBACA,cAACxB,EAAA,EAAKyB,QAAN,CAAcyG,GAAG,WAAWC,KAAM,EAAGvI,MAAO8D,KAAKL,MAAM/C,KAAMsB,SAAU8B,KAAKsE,gBAEhF,uBACJ,qBAAKvE,UAAU,gCAAf,SACA,cAACxB,EAAA,EAAD,CAAQC,QAAQ,UAASR,KAAK,SAA9B,+B,GAnEEkC,IAAMC,WCwEbuE,E,kDAtEX,WAAYrJ,GAAQ,IAAD,8BACf,cAAMA,IAWVgJ,YAAc,SAACtI,GACX,EAAKyD,SAAS,CAACuB,MAAOhF,EAAMC,OAAOE,SAbpB,EAgBnBoI,WAAa,SAACvI,GACV,EAAKyD,SAAS,CAAC5C,KAAMb,EAAMC,OAAOE,SAjBnB,EAoBnBqI,aAAe,SAACxI,GACZA,EAAMS,iBACNC,MAAM,qBAAsB,CACxBC,OAAQ,QACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,MAASmC,aAAagC,QAAQ,SAC9B,MAAS,EAAKtB,MAAMoB,MACpB,KAAQ,EAAKpB,MAAM/C,KACnB,OAAU,EAAKvB,MAAMwG,SAASlC,MAAM2B,QAG3CvE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACEA,EAASsE,IAET,EAAKjG,MAAMgI,QAAQC,KAAK,CACpBlH,SAAU,UAHAe,MAAMH,EAASI,YAOpCI,OAAM,SAACC,GACJN,MAAM,oBAAsBM,OAxChC,EAAKkC,MAAQ,CACToB,MAAO,EAAK1F,MAAMwG,SAASlC,MAAMoB,MACjCnE,KAAM,EAAKvB,MAAMwG,SAASlC,MAAM/C,MAGpC,EAAK2H,aAAe,EAAKA,aAAa3E,KAAlB,gBACpB,EAAKyE,YAAc,EAAKA,YAAYzE,KAAjB,gBACnB,EAAK0E,WAAa,EAAKA,WAAW1E,KAAhB,gBATH,E,0CA8CnB,WACI,OACI,mCACI,eAACvD,EAAA,EAAD,WACI,oBAAI0D,UAAU,cAAd,yBACA,eAACzD,EAAA,EAAD,CAAMC,SAAUyD,KAAKuE,aAArB,UACI,eAACjI,EAAA,EAAKsB,MAAN,CAAYC,UAAU,+BAAtB,UACI,cAACvB,EAAA,EAAKwB,MAAN,qBACA,cAACxB,EAAA,EAAKyB,QAAN,CAAcyG,GAAG,WAAWC,KAAM,EAAGvI,MAAO8D,KAAKL,MAAMoB,MAAO7C,SAAU8B,KAAKqE,cAC7E,uBACA,cAAC/H,EAAA,EAAKwB,MAAN,oBACA,cAACxB,EAAA,EAAKyB,QAAN,CAAcyG,GAAG,WAAWC,KAAM,EAAGvI,MAAO8D,KAAKL,MAAM/C,KAAMsB,SAAU8B,KAAKsE,gBAEhF,uBACJ,qBAAKvE,UAAU,gCAAf,SACA,cAACxB,EAAA,EAAD,CAAQC,QAAQ,UAASR,KAAK,SAA9B,kC,GA9DKkC,IAAMC,WCyGhBwE,E,kDAvGX,WAAYtJ,GAAQ,IAAD,8BACf,cAAMA,IAgBVuJ,eAAiB,SAAC7I,GACd,EAAKyD,SAAS,CAAC/D,SAAUM,EAAMC,OAAOE,SAlBvB,EAqBnB2I,eAAiB,SAAC9I,GACd,EAAKyD,SAAS,CAAC9D,SAAUK,EAAMC,OAAOE,SAtBvB,EAyBnB4I,2BAA6B,SAAC/I,GAC1B,EAAKyD,SAAS,CAACuF,qBAAsBhJ,EAAMC,OAAOE,SA1BnC,EA6BnB8I,YAAc,SAACjJ,GACX,EAAKyD,SAAS,CAAC7D,MAAOI,EAAMC,OAAOE,SA9BpB,EAiCnBqI,aAAe,SAACxI,GACZA,EAAMS,iBACNC,MAAM,eAAgB,CAClBC,OAAQ,QACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACjB,MAASmC,aAAagC,QAAQ,SAC9B,OAAU5D,eAAe4D,QAAQ,OACjC,SAAY,EAAKtB,MAAMlE,SACvB,MAAS,EAAKkE,MAAMhE,MACpB,SAAY,EAAKgE,MAAMjE,aAG9BqB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACFU,QAAQC,IAAIX,GACW,MAApBA,EAASE,QACRQ,QAAQC,IAAIX,GACZG,MAAMH,EAASE,SAEV,EAAKyC,MAAMjE,WAAa,EAAKiE,MAAMoF,sBACxC5H,MAAM,0BACNyE,OAAOC,SAASC,QAAO,KAGvBzE,eAAeC,QAAQ,WAAYN,EAASvB,UAC5C,EAAK+D,SAAS,CAAEjE,UAAU,QAGjCiC,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZN,MAAM,yBA9DV,EAAKwC,MAAQ,CACTpE,UAAU,EACVE,SAAU4B,eAAe4D,QAAQ,YACjCvF,SAAU,GACVqJ,qBAAsB,GACtBpJ,MAAO,IAGX,EAAKiJ,eAAiB,EAAKA,eAAehF,KAApB,gBACtB,EAAKiF,eAAiB,EAAKA,eAAejF,KAApB,gBACtB,EAAKkF,2BAA6B,EAAKA,2BAA2BlF,KAAhC,gBAClC,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAK2E,aAAe,EAAKA,aAAa3E,KAAlB,gBAdL,E,0CAqEnB,WACI,OAAII,KAAKL,MAAMpE,SAEX,cAAC,IAAD,CAAUY,GAAI,CACVC,SAAU,WAId,eAACC,EAAA,EAAD,WACI,oBAAI0D,UAAU,cAAd,yBACA,eAACzD,EAAA,EAAD,CAAMC,SAAUyD,KAAKuE,aAArB,UACI,eAACjI,EAAA,EAAKsB,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACvB,EAAA,EAAKwB,MAAN,uBACA,cAACxB,EAAA,EAAKyB,QAAN,CAAcC,KAAK,OAAO9B,MAAO8D,KAAKL,MAAMlE,SAAUyC,SAAU8B,KAAK4E,oBAEzE,eAACtI,EAAA,EAAKsB,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACvB,EAAA,EAAKwB,MAAN,4BACA,cAACxB,EAAA,EAAKyB,QAAN,CAAcC,KAAK,QAAQ9B,MAAO8D,KAAKL,MAAMhE,MAAOuC,SAAU8B,KAAKgF,iBAEvE,eAAC1I,EAAA,EAAKsB,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACvB,EAAA,EAAKwB,MAAN,uBACA,cAACxB,EAAA,EAAKyB,QAAN,CAAcC,KAAK,WAAW9B,MAAO8D,KAAKL,MAAMjE,SAAUwC,SAAU8B,KAAK6E,eAAgB1G,UAAQ,IACjG,cAAC7B,EAAA,EAAKwB,MAAN,+BACA,cAACxB,EAAA,EAAKyB,QAAN,CAAcC,KAAK,WAAW9B,MAAO8D,KAAKL,MAAMoF,qBAAsB7G,SAAU8B,KAAK8E,2BAA4B3G,UAAQ,OAE7H,cAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUR,KAAK,SAA/B,8B,GA/FKkC,IAAMC,WCyChB8E,G,wDA9Bb,WAAY5J,GAAQ,uCACZA,G,0CAGT,WACC,OACC,sBAAK0E,UAAU,MAAf,UACC,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,IAAIC,UAAW9F,IACxB,cAAC,IAAD,CAAO6F,KAAK,aAAaC,UAAWjB,IAC7C,qCACC,cAAC,EAAD,IACA,cAAC,IAAD,CAAOgB,KAAK,QAAQE,OAAQ,SAAChK,GAAD,OAAW,cAAC,EAAD,eAAUA,OACjD,cAAC,IAAD,CAAO8J,KAAK,SAASE,OAAQ,SAAChK,GAAD,OAAW,cAAC,EAAD,eAAWA,OAEnD,cAAC,IAAD,CAAO8J,KAAK,WAAWE,OAAQ,SAAChK,GAAD,OAAW,cAAC,EAAD,eAAaA,OACvD,cAAC,IAAD,CAAO8J,KAAK,cAAcE,OAAQ,SAAChK,GAAD,OAAW,cAAC,EAAD,eAAgBA,OAC7D,cAAC,IAAD,CAAO8J,KAAK,cAAcE,OAAQ,SAAChK,GAAD,OAAW,cAAC,EAAD,eAAgBA,eAIhE,qBAAK0E,UAAU,MAAf,SACC,cAAC,EAAD,a,GAxBaG,IAAMC,Y,QCblBmF,GAAe,CACjB7J,cAAU8J,EACVhI,QAAIgI,EACJvG,WAAOuG,G,SCILzG,GAAQ0G,aDDC,WAAmC,IAAlC7F,EAAiC,uDAAzB2F,GAAcG,EAAW,uCAC7C,OAAQA,EAAOzH,MACX,KAAKS,EACD,OAAO,2BACAkB,GADP,IAEIlE,SAAUgK,EAAOvG,SAASzD,SAC1B8B,GAAIkI,EAAOvG,SAAS3B,GACpByB,MAAOyG,EAAOvG,SAASF,QAE/B,KAAKN,EACD,OAAO,eACA4G,IAGf,OAAO3F,ICb6B+F,YAAgBC,OAGxDC,IAASP,OACL,cAAC,IAAD,CAAUvG,MAAOA,GAAjB,SACI,cAAC,EAAD,MAEJ+G,SAASC,eAAe,W","file":"static/js/main.575b899e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst SignIn = props =>  {\r\n    const [redirect, redirectHandler] = useState(false)\r\n\tconst [inputValues, setInputValues] = useState({\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n        email: ''\r\n\t})\r\n\r\n    const handleOnChange = (event) => {\r\n\t\tconst { name, value } = event.target\r\n\t\tsetInputValues({ ...inputValues, [name]: value })\r\n\r\n\t}\r\n    \r\n    \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/signin', {\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                ...inputValues\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if(response.status === 400) {\r\n                alert(response.message)\r\n            }\r\n            else {\r\n                sessionStorage.setItem(\"username\", response.username)\r\n                sessionStorage.setItem(\"_id\", response.id)              \r\n                redirectHandler(true)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            alert(\"An error occured!\")\r\n        })\r\n    }\r\n    \r\n\r\n    if (redirect)\r\n        return (\r\n        <Redirect to={{\r\n            pathname: '/blog',\r\n            props: { username: inputValues.username }\r\n        }}/>\r\n        )\r\n    else return (\r\n        <Container>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"user-username\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter username\" name='username' onChange={handleOnChange} required/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"user-email\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" name='email' onChange={handleOnChange} required/>\r\n                    <Form.Text style={{color:'#55633e'}}>\r\n                    We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"user-password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter password\" name='password' onChange={handleOnChange} required/>\r\n                    <Form.Text style={{color:'#55633e'}}>\r\n                    Must include 6 characters\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button >\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SignIn\r\n","export const LOGIN_USER = 'LOGIN_USER'\r\nexport const LOGOUT_USER = 'LOGOUT_USER'\r\n\r\nexport const logoutUser = (id) => {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: LOGOUT_USER,\r\n                userData: { id }\r\n            })\r\n        }\r\n\r\n        catch (err) {\r\n            throw new Error('error in logout user!')\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginUser = (username, id, token) => {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: LOGIN_USER,\r\n                userData: { username, id, token }\r\n            })\r\n        }\r\n\r\n        catch (err) {\r\n            throw new Error('error in login user!')\r\n        }\r\n    }\r\n}","import React, { useReducer, useState } from 'react'\r\nimport { Form, Button, Container } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector, useDispatch, useStore } from 'react-redux'\r\n\r\nimport * as usersActions from '../../store/actions/users'\r\n\r\nconst LogIn = (props) => {\r\n\tconst [redirect, redirectHandler] = useState(false)\r\n\tconst [inputValues, setInputValues] = useState({\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t})\r\n\r\n\tconst handleOnChange = (event) => {\r\n\t\tconst { name, value } = event.target\r\n\t\tsetInputValues({ ...inputValues, [name]: value })\r\n\t}\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst store = useStore()\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tfetch('/login', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t...inputValues,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (!response.username) alert('Username/Password are not correct.')\r\n\t\t\t\telse {\r\n\t\t\t\t\tsessionStorage.setItem('username', inputValues.username)\r\n\t\t\t\t\tsessionStorage.setItem('_id', response.id)\r\n\t\t\t\t\tlocalStorage.setItem('token', response.token)\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tusersActions.loginUser(\r\n\t\t\t\t\t\t\tinputValues.username,\r\n\t\t\t\t\t\t\tresponse.id,\r\n\t\t\t\t\t\t\tresponse.token\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t\tconsole.log(store.getState())\r\n\t\t\t\t\tredirectHandler(true)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (redirect)\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/blog',\r\n\t\t\t\t\tprops: { username: inputValues.username },\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\telse\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group controlId='user-username'>\r\n\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\tplaceholder='Enter username'\r\n\t\t\t\t\t\t\t// value={this.state.username}\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group controlId='user-password'>\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\t// value={this.state.password}\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button variant='primary' type='submit'>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t)\r\n}\r\n\r\nexport default LogIn\r\n","import React from 'react';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport SignIn from './main-components/sign-in'\r\nimport LogIn from './main-components/log-in'\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showLogIn: true\r\n        }\r\n\r\n        this.onSignInClick = this.onSignInClick.bind(this)\r\n        this.onLogInClick = this.onLogInClick.bind(this)\r\n    }\r\n\r\n    onSignInClick = () => {\r\n        this.setState({showLogIn: false})\r\n    }\r\n\r\n    onLogInClick = () => {\r\n        this.setState({showLogIn: true})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ButtonGroup size=\"lg\" className=\"main-btns\" aria-label=\"Basic example\">\r\n                    <Button className={this.state.showLogIn ? \"active-btn\": \"\"} onClick={this.onLogInClick}>Log-In</Button>\r\n                    <Button className={!this.state.showLogIn ? \"active-btn\": \"\"} onClick={this.onSignInClick}>Sign-In</Button>\r\n                </ButtonGroup>\r\n                {this.state.showLogIn ? <LogIn/> : <SignIn/>}\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Main","import React, { useState } from 'react'\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport { useSelector, useStore } from 'react-redux'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport '../css/navbar.css'\r\n\r\nconst NavBar = (props) => {\r\n\tconst store = useStore()\r\n\r\n\tconst [redirectHome, redirectHomeHandler] = useState(false)\r\n\tconst LoggedUser = store.getState().username\r\n\r\n\tconst RedirectToHomePage = () => {\r\n\t\tfetch('/logout/' + LoggedUser, {\r\n\t\t\tmethod: 'GET',\r\n\t\t}) //logout user - delete tokens\r\n\t\t\t.then(\r\n\t\t\t\tsessionStorage.removeItem('username'),\r\n\t\t\t\tlocalStorage.removeItem('token'),\r\n\t\t\t\tredirectHomeHandler(true)\r\n\t\t\t)\r\n\t}\r\n\r\n\t// const handleRedirectToUpdateUser = () => {\r\n\t// \tredirectToUpdateHandler(true)\r\n\t// }\r\n\r\n\tconst handleDeleteUser = () => {\r\n\t\tfetch('/delete/myuser', {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({ \r\n\t\t\t\t\"token\": localStorage.getItem(\"token\"),\r\n\t\t\t\tusername: LoggedUser\r\n\t\t\t }),\r\n\t\t})\r\n\t\t\t.then(RedirectToHomePage())\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (redirectHome) {\r\n\t\tconsole.log(store.getState())\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\t// if (redirectHome) {\r\n\t// \treturn (\r\n\t// \t\t<Redirect\r\n\t// \t\t\tto={{\r\n\t// \t\t\t\tpathname: '/',\r\n\t// \t\t\t}}\r\n\t// \t\t/>\r\n\t// \t)\r\n\t// }\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{console.log(store.getState())}\r\n\t\t\t<Navbar variant='dark'>\r\n\t\t\t\t<Navbar.Brand>\r\n\t\t\t\t\tBlog-App\r\n\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t<Nav className='mr-auto'>\r\n\t\t\t\t\t{/* <Nav.Link href=\"/blog\">Blog</Nav.Link>\r\n            <Nav.Link href=\"/chat\">Chat</Nav.Link>\r\n            <Nav.Link href=\"/about\">About</Nav.Link> */}\r\n\t\t\t\t</Nav>\r\n\t\t\t\t<Navbar.Collapse className='justify-content-end'>\r\n\t\t\t\t\t<Navbar.Text>Signed in as:</Navbar.Text>\r\n\t\t\t\t\t<NavDropdown title={LoggedUser} id='nav-dropdown'>\r\n\t\t\t\t\t\t<NavDropdown.Item>\r\n\t\t\t\t\t\t\t<Link to='./updateUser' className='link'>\r\n\t\t\t\t\t\t\t\tUpdate user\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item onClick={handleDeleteUser}>\r\n\t\t\t\t\t\t\tDelete user\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item onClick={RedirectToHomePage}>\r\n\t\t\t\t\t\t\tLog-out\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t\t<br />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react';\r\nimport { AiFillLike } from 'react-icons/ai';\r\nimport '../../../css/like.css'\r\n\r\nclass Like extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            totalLikes: this.props.totalLikes,\r\n            clicked: false\r\n        }\r\n        fetch('/posts/check-like', {\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"userID\": sessionStorage.getItem(\"_id\"),\r\n                \"postID\": this.props._id,\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            this.setState({\r\n                clicked: response.value\r\n            })\r\n        })\r\n        .catch(error => alert(\"An error occured!\"))\r\n\r\n        this.UpdateLikes = this.UpdateLikes.bind(this)\r\n    }\r\n\r\n    UpdateLikes = () => {\r\n        this.setState({\r\n            clicked: !this.state.clicked,\r\n            totalLikes: (!this.state.clicked) ? this.state.totalLikes + 1 :  \r\n            (this.state.totalLikes && this.state.clicked) ? this.state.totalLikes - 1 : \r\n            this.state.totalLikes  \r\n        })\r\n        \r\n        fetch('/posts/update-likes', {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"postID\": this.props._id,\r\n                \"userID\": sessionStorage.getItem(\"_id\"),\r\n                \"totalLikes\": this.state.totalLikes\r\n            })\r\n        })\r\n        .catch(error => alert(\"An error occured!\"))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Like\">\r\n                <AiFillLike className={!this.state.clicked ? \"like-btn\" : \"clicked-like\"} onClick={this.UpdateLikes}/>\r\n                <span> {this.state.totalLikes}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Like","import React from 'react';\r\nimport { Card, Accordion, Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Like from './post-components/like'\r\nimport '../../css/post.css' \r\n\r\nvar key = 0\r\n\r\nclass Post extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.key = 0\r\n        this.state = {\r\n            redirectToUpdate: false\r\n        }\r\n\r\n        this.userButtons = this.userButtons.bind(this)\r\n        this.deletePost = this.deletePost.bind(this)\r\n        this.redirectToUpdatePost = this.redirectToUpdatePost.bind(this)\r\n    }\r\n\r\n    deletePost = () => {\r\n        fetch(`/posts/${this.props._id}`, {\r\n            method: 'DELETE',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\")\r\n            })\r\n        })\r\n        .then((res) => {\r\n            if( res.status === 404 || res.status === 500) {\r\n                alert(res.statusText)\r\n            }\r\n            else {\r\n                alert(`Post ${this.props.title} deleted successfully.`)\r\n                window.location.reload(false)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(error)\r\n        })\r\n    }\r\n\r\n    redirectToUpdatePost = () => {\r\n        this.setState({\r\n            redirectToUpdate: true\r\n        })\r\n    }\r\n\r\n    userButtons = () => {\r\n        if (sessionStorage.getItem('_id') === (this.props.author)) {\r\n            return (\r\n                <>\r\n                    <Button variant=\"secondary\" size=\"sm\" onClick={this.redirectToUpdatePost}>Update Post</Button>\r\n                    <Button variant=\"danger\" size=\"sm\"  onClick={this.deletePost}>Delete Post</Button>\r\n                </>\r\n            )\r\n        }\r\n        return null\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirectToUpdate)\r\n            return (\r\n            <Redirect to={{\r\n                pathname: '/updatePost',\r\n                state: {  \r\n                _id: this.props._id,\r\n                body: this.props.body, \r\n                title: this.props.title }\r\n            }}/>\r\n            )\r\n        return (\r\n            <>\r\n            <Card className=\"post-card\">\r\n            <Card.Header>\r\n                <Accordion.Toggle className=\"post-btn\" eventKey={(++key).toString()}>\r\n                    <b>{this.props.authorName}</b> { \"|\" } {this.props.title}\r\n                </Accordion.Toggle>\r\n            </Card.Header>\r\n                <Accordion.Collapse eventKey={(key).toString()}>\r\n                    <Card.Body>\r\n                        <p>\r\n                            {this.props.body}\r\n                        </p>\r\n                        <br/>\r\n                        <div className=\"post-sub-btns\">\r\n                            {this.userButtons()}\r\n                            <Like \r\n                                _id = {this.props._id}  \r\n                                author = {this.props.author}\r\n                                totalLikes = {this.props.likes}\r\n                            />\r\n                        </div>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            </>\r\n        );\r\n    };\r\n };\r\n\r\n export default Post\r\n\r\n\r\n","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport Post from '../../blog-components/post'\r\nimport '../../../css/blog.css'\r\n\r\nclass Posts extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                   {\r\n                        this.props.postslist.filter((post) => post.title.includes(this.props.text) || \r\n                        post.body.includes(this.props.text))\r\n                            .map((post) => {\r\n                            return (\r\n                                <Accordion>\r\n                                    <Post \r\n                                        _id = {post._id} \r\n                                        body = {post.body} \r\n                                        author = {post.author} \r\n                                        authorName = {post.authorName}\r\n                                        title = {post.title}\r\n                                        likes = {post.likes}\r\n                                    />\r\n                                </Accordion>\r\n                            )\r\n                        })\r\n                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Posts","import React from 'react'\r\nimport {\r\n\tJumbotron,\r\n\tContainer,\r\n\tButton,\r\n\tInputGroup,\r\n\tFormControl,\r\n} from 'react-bootstrap'\r\nimport Navbar from './navbar'\r\nimport '../css/blog.css'\r\nimport '../css/loading.css'\r\nimport Posts from './blog-components/general-components/postsList'\r\n\r\nclass Blog extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tposts: null,\r\n\t\t\ttext: '',\r\n\t\t}\r\n\r\n\t\tfetch('/posts/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tposts: data,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t\talert('An error occured!')\r\n\t\t\t})\r\n\r\n\t\tthis.redirectToAddPost = this.redirectToAddPost.bind(this)\r\n\t\tthis.handleSearch = this.handleSearch.bind(this)\r\n\t}\r\n\r\n\tredirectToAddPost = () => {\r\n\t\tthis.props.history.push('/addPost')\r\n\t}\r\n\r\n\thandleSearch = (event) => {\r\n\t\tthis.setState({\r\n\t\t\ttext: event.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.posts)\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Container className='text-center'>\r\n\t\t\t\t\t\t<Jumbotron fluid>\r\n\t\t\t\t\t\t\t<h1>Welcome!</h1>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tIn this blog you can share with the network everything you want!\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<InputGroup size='sm search'>\r\n\t\t\t\t\t\t\t<InputGroup.Prepend className='d-flex justify-content-center'>\r\n\t\t\t\t\t\t\t\t<InputGroup.Text>Search</InputGroup.Text>\r\n\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\taria-label='Small'\r\n\t\t\t\t\t\t\t\tplaceholder='Enter text here!'\r\n\t\t\t\t\t\t\t\tonChange={this.handleSearch}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div className='d-flex justify-content-center'>\r\n\t\t\t\t\t\t\t<Button onClick={this.redirectToAddPost}>Add new post</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t\t<Posts postslist={this.state.posts} text={this.state.text} />\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\telse\r\n\t\t\treturn (\r\n\t\t\t\t<div id='loading'>\r\n\t\t\t\t\tLoading\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className='dot' />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react';\r\nimport Navbar from './navbar'\r\n\r\n\r\nclass About extends React.Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h2>About</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport { AiFillGithub, AiFillLinkedin} from 'react-icons/ai';\r\nimport '../css/footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <hr/>\r\n                <div className=\"footer-elements d-flex justify-content-center\">\r\n                    <p>Created By: Yehonatan Hen - &nbsp;</p>\r\n                    <a href=\"https://www.linkedin.com/in/yehonatan-hen/\" target=\"_blank\" rel=\"noopener noreferrer\"><AiFillLinkedin size=\"25\"/></a>\r\n                    <a href=\"https://github.com/YehonatanHen\" target=\"_blank\" rel=\"noopener noreferrer\"><AiFillGithub size=\"25\"/></a>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport Navbar from './navbar'\r\n\r\n\r\nclass Chat extends React.Component {\r\n    render(){\r\n        return (\r\n            <>\r\n                <Navbar/>\r\n                <h2>Chat</h2>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat","import React from 'react';\r\n\r\nexport default function authError(){\r\n    return (\r\n        <> \r\n            <h1>You are not authenticated!</h1>\r\n            <a href='/'>Log-in/Sign-in</a>\r\n        </>\r\n    )\r\n};","import React from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\n\r\nclass AddPost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: '',\r\n            body: ''\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleTitle = this.handleTitle.bind(this)\r\n        this.handleBody = this.handleBody.bind(this)\r\n    }\r\n\r\n    handleTitle = (event) => {\r\n        this.setState({title: event.target.value})\r\n    }\r\n\r\n    handleBody = (event) => {\r\n        this.setState({body: event.target.value})\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/add-post', {\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\"),\r\n                \"title\": this.state.title,\r\n                \"body\": this.state.body,\r\n                \"author\": sessionStorage.getItem(\"_id\"), //_id value saved in storage when user login/signin\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            if(response.status === 400) {\r\n                alert(response.message)\r\n            }\r\n            else if(!response._id) alert(response.message)\r\n            else {\r\n                this.props.history.push({\r\n                    pathname: '/blog',\r\n                })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            alert(\"An error occured!\")\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <h1 className=\"text-center\">Add new post</h1>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Title:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={1} value={this.state.title} onChange={this.handleTitle}/>\r\n                            <br/>\r\n                            <Form.Label>body:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} value={this.state.body} onChange={this.handleBody}/>\r\n                        </Form.Group>\r\n                        <br/>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                    <Button variant=\"primary\"type=\"submit\">Add</Button>\r\n                    </div>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n        );\r\n   }; \r\n}\r\n\r\nexport default AddPost","import React from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport Navbar from '../navbar'\r\n\r\nclass updatePost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: this.props.location.state.title,\r\n            body: this.props.location.state.body\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleTitle = this.handleTitle.bind(this)\r\n        this.handleBody = this.handleBody.bind(this)\r\n    }\r\n\r\n    handleTitle = (event) => {\r\n        this.setState({title: event.target.value})\r\n    }\r\n\r\n    handleBody = (event) => {\r\n        this.setState({body: event.target.value})\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/posts/update-post', {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\"),\r\n                \"title\": this.state.title,\r\n                \"body\": this.state.body,\r\n                \"postID\": this.props.location.state._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if(!response._id) alert(response.message)\r\n            else {\r\n                this.props.history.push({\r\n                    pathname: '/blog',\r\n                })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(\"An error occured!\" + error) \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <h1 className=\"text-center\">Update post</h1>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Title:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={1} value={this.state.title} onChange={this.handleTitle}/>\r\n                            <br/>\r\n                            <Form.Label>body:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} value={this.state.body} onChange={this.handleBody}/>\r\n                        </Form.Group>\r\n                        <br/>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                    <Button variant=\"primary\"type=\"submit\">Update</Button>\r\n                    </div>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n        );\r\n   }; \r\n}\r\n\r\nexport default updatePost","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass UpdateUser extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            username: sessionStorage.getItem(\"username\"),\r\n            password: '',\r\n            passwordConfirmation: '',\r\n            email: ''\r\n        }\r\n\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.handlePasswordConfirmation = this.handlePasswordConfirmation.bind(this)\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleUsername = (event) => {\r\n        this.setState({username: event.target.value});\r\n    }\r\n\r\n    handlePassword = (event) => {\r\n        this.setState({password: event.target.value}); \r\n    }\r\n\r\n    handlePasswordConfirmation = (event) => {\r\n        this.setState({passwordConfirmation: event.target.value}); \r\n    }\r\n\r\n    handleEmail = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/update-user', {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\"),\r\n                \"userID\": sessionStorage.getItem(\"_id\"), \r\n                \"username\": this.state.username,\r\n                \"email\": this.state.email,\r\n                \"password\": this.state.password\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            if(response.status === 400) {\r\n                console.log(response)\r\n                alert(response.status)\r\n            }\r\n            else if (this.state.password !== this.state.passwordConfirmation) {\r\n                alert(\"Passwords don't match!\")\r\n                window.location.reload(false); //Refreshing page\r\n            }\r\n            else {\r\n                sessionStorage.setItem(\"username\", response.username)              \r\n                this.setState({ redirect: true })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            alert(\"An error occured!\")\r\n        })\r\n    }\r\n    \r\n\r\n    render () {\r\n        if (this.state.redirect)\r\n            return (\r\n            <Redirect to={{\r\n                pathname: '/blog',\r\n            }}/>\r\n            )\r\n        else return (\r\n            <Container>\r\n                <h1 className=\"text-center\">Update user</h1>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId=\"user-username\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" value={this.state.username} onChange={this.handleUsername} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"user-email\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" value={this.state.email} onChange={this.handleEmail} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"user-password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" value={this.state.password} onChange={this.handlePassword} required/>\r\n                        <Form.Label>Confirm password</Form.Label>\r\n                        <Form.Control type=\"password\" value={this.state.passwordConfirmation} onChange={this.handlePasswordConfirmation} required/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button >\r\n                </Form>\r\n            </Container>\r\n        );\r\n    };\r\n};\r\n\r\nexport default UpdateUser\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Main from './components/main'\r\nimport Blog from './components/blog'\r\nimport About from './components/about'\r\nimport Chat from './components/chat'\r\nimport Footer from './components/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport authError from './components/authError'\r\nimport AddPost from './components/addPost'\r\nimport UpdatePost from './components/update-components/updatePost'\r\nimport UpdateUser from './components/update-components/updateUser'\r\nimport NavBar from './components/navbar'\r\nimport './css/app.css'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='app'>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path='/' component={Main} />\r\n           \t\t\t\t<Route path='/authError' component={authError} />\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<NavBar />\r\n\t\t\t\t\t\t\t<Route path='/blog' render={(props) => <Blog {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/about' render={(props) => <About {...props}/>} />\r\n\t\t\t\t\t\t\t{/* <Route path='/chat'  render={() => <Chat />} /> */}\r\n\t\t\t\t\t\t\t<Route path='/addPost' render={(props) => <AddPost {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/updatePost' render={(props) => <UpdatePost {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/updateUser' render={(props) => <UpdateUser {...props}/>} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t\t<div className='gap'>\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App\r\n","import { LOGIN_USER, LOGOUT_USER } from '../actions/users'\r\n\r\nconst initialState = {\r\n    username: undefined,\r\n    id: undefined,\r\n    token: undefined\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return {\r\n                ...state,\r\n                username: action.userData.username,\r\n                id: action.userData.id,\r\n                token: action.userData.token,\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...initialState\r\n            }\r\n    }\r\n    return state\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux'\r\nimport usersReducer from './store/reducers/users'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\n\r\nconst store = createStore(usersReducer, applyMiddleware(ReduxThunk));\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}