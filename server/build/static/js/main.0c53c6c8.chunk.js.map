{"version":3,"sources":["store/actions/users.js","components/main-components/sign-in.jsx","components/main-components/log-in.jsx","components/main.jsx","components/blog-components/post-components/like.jsx","store/actions/posts.js","components/blog-components/post.jsx","components/blog-components/general-components/postsList.jsx","components/blog.jsx","components/about.jsx","components/chat.jsx","components/footer.jsx","components/authError.jsx","components/addPost.jsx","components/update-components/updatePost.jsx","components/update-components/updateUser.jsx","components/navbar.jsx","app.jsx","store/reducers/users.js","store/reducers/posts.js","index.js"],"names":["LOGIN_USER","LOGOUT_USER","loginUser","username","id","token","dispatch","type","userData","err","Error","SignIn","props","useState","redirect","redirectHandler","password","email","inputValues","setInputValues","handleOnChange","event","target","name","value","useDispatch","to","pathname","Container","Form","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","status","alert","message","localStorage","setItem","usersActions","catch","error","console","log","Group","controlId","Label","Control","placeholder","onChange","required","Text","style","color","Button","variant","LogIn","Main","onSignInClick","setState","showLogIn","onLogInClick","state","bind","ButtonGroup","size","className","this","onClick","React","Component","Like","totalLikes","clicked","like","setLike","user","useSelector","useEffect","userID","postID","_id","GET_POSTS","DELETE_POST","Post","key","redirectToUpdate","redirectToUpdateHandler","title","Card","Header","Accordion","Toggle","eventKey","toString","authorName","Collapse","Body","author","postId","postTitle","getState","a","res","statusText","likes","Posts","postslist","filter","post","includes","text","map","Blog","posts","setText","isLoading","setIsLoading","result","postsActions","Jumbotron","fluid","InputGroup","Prepend","FormControl","history","push","About","socket","socketIOClient","Chat","setMessage","messages","setMessages","emit","on","concat","msg","moment","createdAt","format","Footer","href","rel","authError","AddPost","setPost","as","rows","UpdatePost","location","UpdateUser","handleUsername","handlePassword","handlePasswordConfirmation","passwordConfirmation","handleEmail","handleSubmit","getItem","window","reload","NavBar","redirectHome","redirectHomeHandler","RedirectToHomePage","removeItem","Navbar","Brand","Nav","NavDropdown","Item","App","exact","path","component","render","initialState","usersReducer","action","postsReducer","combinedReducer","combineReducers","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0c53c6c8.chunk.js","sourcesContent":["export const LOGIN_USER = 'LOGIN_USER'\r\nexport const LOGOUT_USER = 'LOGOUT_USER'\r\n\r\nexport const logoutUser = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem('username')\r\n        localStorage.removeItem('_id')\r\n        localStorage.removeItem('token')\r\n        try {\r\n            dispatch({\r\n                type: LOGOUT_USER,\r\n            })\r\n        }\r\n        catch (err) {\r\n            throw new Error('error in logout user!')\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginUser = (username, id, token) => {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: LOGIN_USER,\r\n                userData: { username, id, token }\r\n            })\r\n        } catch (err) {\r\n            throw new Error('error in login user!')\r\n        }\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button, Container } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport * as usersActions from '../../store/actions/users'\r\n\r\nconst SignIn = (props) => {\r\n\tconst [redirect, redirectHandler] = useState(false)\r\n\tconst [inputValues, setInputValues] = useState({\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t\temail: '',\r\n\t})\r\n\r\n\tconst handleOnChange = (event) => {\r\n\t\tconst { name, value } = event.target\r\n\t\tsetInputValues({ ...inputValues, [name]: value })\r\n\t}\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tfetch('/signin', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t...inputValues,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 400) {\r\n\t\t\t\t\talert(response.message)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlocalStorage.setItem('username', response.username)\r\n\t\t\t\t\tlocalStorage.setItem('_id', response.id)\r\n\t\t\t\t\tlocalStorage.setItem('token', response.token)\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tusersActions.loginUser(\r\n\t\t\t\t\t\t\tinputValues.username,\r\n\t\t\t\t\t\t\tresponse.id,\r\n\t\t\t\t\t\t\tresponse.token\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t\tredirectHandler(true)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t\talert('An error occured!')\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (redirect)\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/blog',\r\n\t\t\t\t\tprops: { username: inputValues.username },\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\telse\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group controlId='user-username'>\r\n\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tplaceholder='Enter username'\r\n\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group controlId='user-email'>\r\n\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Text style={{ color: '#55633e' }}>\r\n\t\t\t\t\t\t\tWe'll never share your email with anyone else.\r\n\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group controlId='user-password'>\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Text style={{ color: '#55633e' }}>\r\n\t\t\t\t\t\t\tMust include 6 characters\r\n\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button variant='primary' type='submit'>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t)\r\n}\r\n\r\nexport default SignIn\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Container } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginUser } from '../../store/actions/users'\r\n\r\nconst LogIn = (props) => {\r\n\tconst [redirect, redirectHandler] = useState(false)\r\n\tconst [inputValues, setInputValues] = useState({\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t})\r\n\r\n\tconst handleOnChange = (event) => {\r\n\t\tconst { name, value } = event.target\r\n\t\tsetInputValues({ ...inputValues, [name]: value })\r\n\t}\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tfetch('/login', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t...inputValues,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (!response.username) alert('Username/Password are not correct.')\r\n\t\t\t\telse {\r\n\t\t\t\t\tlocalStorage.setItem('username', inputValues.username)\r\n\t\t\t\t\tlocalStorage.setItem('_id', response.id)\r\n\t\t\t\t\tlocalStorage.setItem('token', response.token)\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tloginUser(\r\n\t\t\t\t\t\t\tinputValues.username,\r\n\t\t\t\t\t\t\tresponse.id,\r\n\t\t\t\t\t\t\tresponse.token\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t\tredirectHandler(true)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (redirect)\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/blog',\r\n\t\t\t\t\tprops: { username: inputValues.username },\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\telse\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group controlId='user-username'>\r\n\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\tplaceholder='Enter username'\r\n\t\t\t\t\t\t\t// value={this.state.username}\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group controlId='user-password'>\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\t// value={this.state.password}\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button variant='primary' type='submit'>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t)\r\n}\r\n\r\nexport default LogIn\r\n","import React from 'react';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport SignIn from './main-components/sign-in'\r\nimport LogIn from './main-components/log-in'\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showLogIn: true\r\n        }\r\n\r\n        this.onSignInClick = this.onSignInClick.bind(this)\r\n        this.onLogInClick = this.onLogInClick.bind(this)\r\n    }\r\n\r\n    onSignInClick = () => {\r\n        this.setState({showLogIn: false})\r\n    }\r\n\r\n    onLogInClick = () => {\r\n        this.setState({showLogIn: true})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ButtonGroup size=\"lg\" className=\"main-btns\" aria-label=\"Basic example\">\r\n                    <Button className={this.state.showLogIn ? \"active-btn\": \"\"} onClick={this.onLogInClick}>Log-In</Button>\r\n                    <Button className={!this.state.showLogIn ? \"active-btn\": \"\"} onClick={this.onSignInClick}>Sign-In</Button>\r\n                </ButtonGroup>\r\n                {this.state.showLogIn ? <LogIn/> : <SignIn/>}\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Main","import React, { useEffect, useState } from 'react'\r\nimport { AiFillLike } from 'react-icons/ai'\r\nimport { useSelector } from 'react-redux'\r\nimport '../../../css/like.css'\r\n\r\nconst Like = (props) => {\r\n\tconst [like, setLike] = useState({\r\n\t\ttotalLikes: props.totalLikes,\r\n\t\tclicked: false,\r\n\t})\r\n\r\n\tconst user = useSelector((state) => state.user)\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('/posts/check-like', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tuserID: user.id,\r\n\t\t\t\tpostID: props._id,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tsetLike({\r\n                    ...like,\r\n\t\t\t\t\tclicked: response.value,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n                console.log(error)\r\n                alert('An error occured!')})\r\n\t}, [])\r\n\r\n\tconst updateLikes = () => {\r\n\t\tsetLike({\r\n\t\t\tclicked: !like.clicked,\r\n\t\t\ttotalLikes: !like.clicked\r\n\t\t\t\t? like.totalLikes + 1\r\n\t\t\t\t: like.totalLikes && like.clicked\r\n\t\t\t\t? like.totalLikes - 1\r\n\t\t\t\t: like.totalLikes,\r\n\t\t})\r\n\r\n\t\tfetch('/posts/update-likes', {\r\n\t\t\tmethod: 'PATCH',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostID: props._id,\r\n\t\t\t\tuserID: user.id,\r\n\t\t\t\ttotalLikes: like.totalLikes,\r\n\t\t\t}),\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log(error)\r\n\t\t\t// alert('An error occured!')\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='Like'>\r\n\t\t\t<AiFillLike\r\n\t\t\t\tclassName={!like.clicked ? 'like-btn' : 'clicked-like'}\r\n\t\t\t\tonClick={updateLikes}\r\n\t\t\t/>\r\n\t\t\t<span> {like.totalLikes}</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Like\r\n","export const GET_POSTS = 'GET_POSTS'\r\nexport const DELETE_POST = 'DELETE_POST'\r\n\r\nexport const getPosts = () => {\r\n    let posts = []\r\n    return async dispatch => {\r\n        await fetch('/posts/', {\r\n            method: 'GET',\r\n        })\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                posts = result\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                alert('An error occured!')\r\n            })\r\n\r\n        await dispatch({ posts: posts, type: GET_POSTS })\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId, postTitle) => {\r\n    return async (dispatch, getState) => {\r\n        await fetch(`/posts/${postId}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"token\": getState().user.token\r\n            })\r\n        })\r\n            .then((res) => {\r\n                if (res.status === 404 || res.status === 500) {\r\n                    alert(res.statusText)\r\n                }\r\n                else {\r\n                    alert(`Post ${postTitle} deleted successfully.`)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert(error)\r\n            })\r\n\r\n        await dispatch({ postId: postId, type: DELETE_POST })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Card, Accordion, Button } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Like from './post-components/like'\r\nimport '../../css/post.css'\r\nimport * as postsActions from '../../store/actions/posts'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const Post = (props) => {\r\n\tlet key = 0\r\n\tconst [redirectToUpdate, redirectToUpdateHandler] = useState(false)\r\n\tconst user = useSelector(state => state.user)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst userButtons = () => {\r\n\t\tif (user.id === props.author) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='secondary'\r\n\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\tonClick={() => redirectToUpdateHandler(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUpdate Post\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\tonClick={() => dispatch(postsActions.deletePost(props._id, props.title))}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDelete Post\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\tif (redirectToUpdate)\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/updatePost',\r\n\t\t\t\t\tstate: {\r\n\t\t\t\t\t\t_id: props._id,\r\n\t\t\t\t\t\tbody: props.body,\r\n\t\t\t\t\t\ttitle: props.title,\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card className='post-card'>\r\n\t\t\t\t<Card.Header>\r\n\t\t\t\t\t<Accordion.Toggle className='post-btn' eventKey={(++key).toString()}>\r\n\t\t\t\t\t\t<b>{props.authorName}</b> {'|'} {props.title}\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Accordion.Collapse eventKey={key.toString()}>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<p>{props.body}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div className='post-sub-btns'>\r\n\t\t\t\t\t\t\t{userButtons()}\r\n\t\t\t\t\t\t\t<Like\r\n\t\t\t\t\t\t\t\t_id={props._id}\r\n\t\t\t\t\t\t\t\tauthor={props.author}\r\n\t\t\t\t\t\t\t\ttotalLikes={props.likes}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Accordion.Collapse>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Accordion } from 'react-bootstrap'\r\nimport { Post } from '../../blog-components/post'\r\nimport '../../../css/blog.css'\r\n\r\nexport const Posts = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{props.postslist\r\n\t\t\t\t.filter(\r\n\t\t\t\t\t(post) =>\r\n\t\t\t\t\t\tpost.title.includes(props.text) || post.body.includes(props.text)\r\n\t\t\t\t)\r\n\t\t\t\t.map((post) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Accordion>\r\n\t\t\t\t\t\t\t<Post\r\n\t\t\t\t\t\t\t\t_id={post._id}\r\n\t\t\t\t\t\t\t\tbody={post.body}\r\n\t\t\t\t\t\t\t\tauthor={post.author}\r\n\t\t\t\t\t\t\t\tauthorName={post.authorName}\r\n\t\t\t\t\t\t\t\ttitle={post.title}\r\n\t\t\t\t\t\t\t\tlikes={post.likes}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { useEffect, useState} from 'react'\r\nimport {\r\n\tJumbotron,\r\n\tContainer,\r\n\tButton,\r\n\tInputGroup,\r\n\tFormControl,\r\n} from 'react-bootstrap'\r\nimport '../css/blog.css'\r\nimport '../css/loading.css'\r\nimport { Posts } from './blog-components/general-components/postsList'\r\nimport * as postsActions from '../store/actions/posts'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const Blog = (props) => {\r\n\tconst posts = useSelector((state) => state.posts.posts)\r\n\tconst [text, setText] = useState('')\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true)\r\n\t\tdispatch(postsActions.getPosts())\r\n\t\tsetIsLoading(false)\r\n\t}, [dispatch])\r\n\r\n\tconst redirectToAddPost = () => {\r\n\t\tprops.history.push('/addPost')\r\n\t}\r\n\r\n\tconst handleSearch = (event) => {\r\n\t\tsetText(event.target.value)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isLoading ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Container className='text-center'>\r\n\t\t\t\t\t\t<Jumbotron fluid>\r\n\t\t\t\t\t\t\t<h1>Welcome!</h1>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tIn this blog you can share with the network everything you want!\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<InputGroup size='sm search'>\r\n\t\t\t\t\t\t\t<InputGroup.Prepend className='d-flex justify-content-center'>\r\n\t\t\t\t\t\t\t\t<InputGroup.Text>Search</InputGroup.Text>\r\n\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\taria-label='Small'\r\n\t\t\t\t\t\t\t\tplaceholder='Enter text here!'\r\n\t\t\t\t\t\t\t\tonChange={handleSearch}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div className='d-flex justify-content-center'>\r\n\t\t\t\t\t\t\t<Button onClick={redirectToAddPost}>Add new post</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t\t<Posts postslist={posts} text={text} />\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<div id='loading'>\r\n\t\t\t\t\tLoading\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className='dot' />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react';\r\n\r\nclass About extends React.Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h2>About</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React, { useState, useEffect } from 'react'\r\nimport '../css/chat.css'\r\nimport {\r\n\tForm,\r\n\tInputGroup,\r\n\tFormControl,\r\n\tButton,\r\n\tContainer,\r\n} from 'react-bootstrap'\r\nimport socketIOClient from 'socket.io-client'\r\nimport moment from 'moment'\r\nimport { useSelector } from 'react-redux'\r\nimport { Prompt } from 'react-router-dom'\r\n\r\nconst socket = socketIOClient()\r\n\r\nlet key = 0\r\n\r\nconst Chat = () => {\r\n\tconst user = useSelector((state) => state.user)\r\n\tconst [message, setMessage] = useState('')\r\n\tconst [messages, setMessages] = useState([])\r\n\r\n\tconst sendMessageHandler = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tsocket.emit(\r\n\t\t\t'sendMessage',\r\n\t\t\t{ message: message, user: user.username },\r\n\t\t\t(error) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\talert(error)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Message delivered!')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tsetMessage('')\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.emit('join', { user: user.username }, (error) => {\r\n\t\t\tif (error) {\r\n\t\t\t\talert(error)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Message delivered!')\r\n\t\t\t}\r\n\t\t})\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('message', (message) => {\r\n\t\t\tsetMessages(messages.concat(message))\r\n\t\t})\r\n\t}, [messages])\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.emit('disconnect', { user: user.username }, (error) => {\r\n\t\t\tif (error) {\r\n\t\t\t\talert(error)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Message delivered!')\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className='chat'>\r\n\t\t\t<div className='messages'>\r\n\t\t\t\t{messages.map((msg) => {\r\n\t\t\t\t\tkey++\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={key} className='message-box'>\r\n\t\t\t\t\t\t\t{console.log(msg)}\r\n\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t{msg.user ? `${msg.user} -` : ''}{' '}\r\n\t\t\t\t\t\t\t\t{moment(msg.createdAt).format('HH:mm A')}\r\n\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t<p> {msg.text}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<Form onSubmit={sendMessageHandler} className='message-input'>\r\n\t\t\t\t<InputGroup>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tplaceholder='Type your message...'\r\n\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\tonChange={(text) => setMessage(text.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button variant='secondary' type='submit'>\r\n\t\t\t\t\t\tSend\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react';\r\nimport { AiFillGithub, AiFillLinkedin} from 'react-icons/ai';\r\nimport '../css/footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <hr/>\r\n                <div className=\"footer-elements d-flex justify-content-center\">\r\n                    <p>Created By: Yonatan Hen - &nbsp;</p>\r\n                    <a href=\"https://www.linkedin.com/in/yonatan-hen/\" target=\"_blank\" rel=\"noopener noreferrer\"><AiFillLinkedin size=\"25\"/></a>\r\n                    <a href=\"https://github.com/YonatanHen\" target=\"_blank\" rel=\"noopener noreferrer\"><AiFillGithub size=\"25\"/></a>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\n\r\nexport default function authError(){\r\n    return (\r\n        <> \r\n            <h1>You are not authenticated!</h1>\r\n            <a href='/'>Log-in/Sign-in</a>\r\n        </>\r\n    )\r\n};","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst AddPost = (props) => {\r\n\tconst [post, setPost] = useState({\r\n\t\ttitle: '',\r\n\t\tbody: '',\r\n\t})\r\n\r\n\tconst user = useSelector((state) => state.user)\r\n\r\n\tconst handleTitle = (event) => {\r\n\t\tsetPost({ ...post, title: event.target.value })\r\n\t}\r\n\r\n\tconst handleBody = (event) => {\r\n\t\tsetPost({ ...post, body: event.target.value })\r\n\t}\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tfetch('/add-post', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\ttoken: user.token,\r\n\t\t\t\ttitle: post.title,\r\n\t\t\t\tbody: post.body,\r\n\t\t\t\tauthor: user.id, //_id value saved in storage when user login/signin\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 400) {\r\n\t\t\t\t\talert(response.message)\r\n\t\t\t\t} else if (!response._id) alert(response.message)\r\n\t\t\t\telse {\r\n\t\t\t\t\tprops.history.push({\r\n\t\t\t\t\t\tpathname: '/blog',\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t\talert('An error occured!')\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container>\r\n\t\t\t\t<h1 className='text-center'>Add new post</h1>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group controlId='exampleForm.ControlTextarea1'>\r\n\t\t\t\t\t\t<Form.Label>Title:</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tas='textarea'\r\n\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\tvalue={post.title}\r\n\t\t\t\t\t\t\tonChange={handleTitle}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Form.Label>body:</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tas='textarea'\r\n\t\t\t\t\t\t\trows={5}\r\n\t\t\t\t\t\t\tvalue={post.body}\r\n\t\t\t\t\t\t\tonChange={handleBody}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className='d-flex justify-content-center'>\r\n\t\t\t\t\t\t<Button variant='primary' type='submit'>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default AddPost\r\n","import React, { useState } from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst UpdatePost = (props) => {\r\n\tconst [post, setPost] = useState({\r\n\t\ttitle: props.location.state.title,\r\n\t\tbody: props.location.state.body,\r\n\t})\r\n\r\n\tconst user = useSelector((state) => state.user)\r\n\r\n\tconst handleTitle = (event) => {\r\n\t\tsetPost({ ...post, title: event.target.value })\r\n\t}\r\n\r\n\tconst handleBody = (event) => {\r\n\t\tsetPost({ ...post, body: event.target.value })\r\n\t}\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tfetch('/posts/update-post', {\r\n\t\t\tmethod: 'PATCH',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\ttoken: user.token,\r\n\t\t\t\ttitle: post.title,\r\n\t\t\t\tbody: post.body,\r\n\t\t\t\tpostID: props.location.state._id,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (!response._id) alert(response.message)\r\n\t\t\t\telse {\r\n\t\t\t\t\tprops.history.push({\r\n\t\t\t\t\t\tpathname: '/blog',\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert('An error occured!' + error)\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container>\r\n\t\t\t\t<h1 className='text-center'>Update post</h1>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group controlId='exampleForm.ControlTextarea1'>\r\n\t\t\t\t\t\t<Form.Label>Title:</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tas='textarea'\r\n\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\tvalue={post.title}\r\n\t\t\t\t\t\t\tonChange={handleTitle}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Form.Label>body:</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tas='textarea'\r\n\t\t\t\t\t\t\trows={5}\r\n\t\t\t\t\t\t\tvalue={post.body}\r\n\t\t\t\t\t\t\tonChange={handleBody}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className='d-flex justify-content-center'>\r\n\t\t\t\t\t\t<Button variant='primary' type='submit'>\r\n\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default UpdatePost\r\n","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass UpdateUser extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            username: localStorage.getItem(\"username\"),\r\n            password: '',\r\n            passwordConfirmation: '',\r\n            email: ''\r\n        }\r\n\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.handlePasswordConfirmation = this.handlePasswordConfirmation.bind(this)\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleUsername = (event) => {\r\n        this.setState({username: event.target.value});\r\n    }\r\n\r\n    handlePassword = (event) => {\r\n        this.setState({password: event.target.value}); \r\n    }\r\n\r\n    handlePasswordConfirmation = (event) => {\r\n        this.setState({passwordConfirmation: event.target.value}); \r\n    }\r\n\r\n    handleEmail = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/update-user', {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\"),\r\n                \"userID\": localStorage.getItem(\"_id\"), \r\n                \"username\": this.state.username,\r\n                \"email\": this.state.email,\r\n                \"password\": this.state.password\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if(response.status === 400) {\r\n                alert(response.status)\r\n            }\r\n            else if (this.state.password !== this.state.passwordConfirmation) {\r\n                alert(\"Passwords don't match!\")\r\n                window.location.reload(false); //Refreshing page\r\n            }\r\n            else {\r\n                localStorage.setItem(\"username\", response.username)              \r\n                this.setState({ redirect: true })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            alert(\"An error occured!\")\r\n        })\r\n    }\r\n    \r\n\r\n    render () {\r\n        if (this.state.redirect)\r\n            return (\r\n            <Redirect to={{\r\n                pathname: '/blog',\r\n            }}/>\r\n            )\r\n        else return (\r\n            <Container>\r\n                <h1 className=\"text-center\">Update user</h1>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId=\"user-username\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" value={this.state.username} onChange={this.handleUsername} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"user-email\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" value={this.state.email} onChange={this.handleEmail} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"user-password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" value={this.state.password} onChange={this.handlePassword} required/>\r\n                        <Form.Label>Confirm password</Form.Label>\r\n                        <Form.Control type=\"password\" value={this.state.passwordConfirmation} onChange={this.handlePasswordConfirmation} required/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button >\r\n                </Form>\r\n            </Container>\r\n        );\r\n    };\r\n};\r\n\r\nexport default UpdateUser\r\n","import React, { useState } from 'react'\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { logoutUser } from '../store/actions/users'\r\nimport '../css/navbar.css'\r\n\r\nconst NavBar = (props) => {\r\n\tconst [redirectHome, redirectHomeHandler] = useState(false)\r\n\tconst user = useSelector((state) => state.user)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst RedirectToHomePage = () => {\r\n\t\tfetch(`/logout/${user.username}`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t}) //logout user - delete tokens\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch(logoutUser())\r\n\t\t\t\tredirectHomeHandler(true)\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst handleDeleteUser = () => {\r\n\t\tfetch('/delete/myuser', {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\ttoken: user.token,\r\n\t\t\t\tusername: user.username,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then(RedirectToHomePage())\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (redirectHome) {\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar variant='dark'>\r\n\t\t\t\t<Navbar.Brand>Blog-App</Navbar.Brand>\r\n\t\t\t\t<Nav className='mr-auto'>\r\n\t\t\t\t\t<Link to='/blog' className='nav-link'>\r\n\t\t\t\t\t\tBlog\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to='/chat' className='nav-link'>\r\n\t\t\t\t\t\tChat\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Nav>\r\n\t\t\t\t<Navbar.Collapse className='justify-content-end'>\r\n\t\t\t\t\t<Navbar.Text>Signed in as:</Navbar.Text>\r\n\t\t\t\t\t<NavDropdown\r\n\t\t\t\t\t\ttitle={user.username}\r\n\t\t\t\t\t\tid='nav-dropdown'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<NavDropdown.Item>\r\n\t\t\t\t\t\t\t<Link to='./updateUser' className='link'>\r\n\t\t\t\t\t\t\t\tUpdate user\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item onClick={handleDeleteUser}>\r\n\t\t\t\t\t\t\tDelete user\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item onClick={RedirectToHomePage}>\r\n\t\t\t\t\t\t\tLog-out\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t\t<br />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Main from './components/main'\r\nimport Blog from './components/blog'\r\nimport About from './components/about'\r\nimport Chat from './components/chat'\r\nimport Footer from './components/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport authError from './components/authError'\r\nimport AddPost from './components/addPost'\r\nimport UpdatePost from './components/update-components/updatePost'\r\nimport UpdateUser from './components/update-components/updateUser'\r\nimport NavBar from './components/navbar'\r\nimport './css/app.css'\r\n\r\nclass App extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='app'>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path='/' component={Main} />\r\n           \t\t\t\t<Route path='/authError' component={authError} />\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<NavBar />\r\n\t\t\t\t\t\t\t<Route path='/blog' render={(props) => <Blog {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/about' render={(props) => <About {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/chat'  render={() => <Chat />} />\r\n\t\t\t\t\t\t\t<Route path='/addPost' render={(props) => <AddPost {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/updatePost' render={(props) => <UpdatePost {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/updateUser' render={(props) => <UpdateUser {...props}/>} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t\t<div className='gap'>\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App\r\n","import { LOGIN_USER, LOGOUT_USER } from '../actions/users'\r\n\r\nconst initialState = {\r\n    username: localStorage.getItem('username') || '',\r\n    id: localStorage.getItem('_id') || '',\r\n    token: localStorage.getItem('token') || ''\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return {\r\n                ...state,\r\n                username: action.userData.username,\r\n                id: action.userData.id,\r\n                token: action.userData.token,\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default usersReducer","import { GET_POSTS, DELETE_POST } from '../actions/posts'\r\n\r\nconst initialState = {\r\n    posts: []\r\n}\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.posts\r\n            }\r\n        case DELETE_POST:\r\n            console.log(state)\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== action.postId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default postsReducer","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux'\r\nimport usersReducer from './store/reducers/users'\r\nimport postsReducer from './store/reducers/posts'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nconst combinedReducer = combineReducers({\r\n    user: usersReducer,\r\n    posts: postsReducer\r\n})\r\n\r\nconst store = createStore(combinedReducer, applyMiddleware(ReduxThunk));\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}