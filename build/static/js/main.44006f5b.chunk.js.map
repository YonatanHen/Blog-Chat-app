{"version":3,"sources":["store/actions/users.js","components/main-components/sign-in.jsx","components/main-components/log-in.jsx","components/main.jsx","components/blog-components/post-components/like.jsx","store/actions/posts.js","components/blog-components/post.jsx","components/blog-components/general-components/postsList.jsx","components/blog.jsx","components/navbar.jsx","components/about.jsx","components/footer.jsx","components/chat.jsx","components/authError.jsx","components/addPost.jsx","components/update-components/updatePost.jsx","components/update-components/updateUser.jsx","app.jsx","store/reducers/users.js","store/reducers/posts.js","index.js"],"names":["LOGIN_USER","LOGOUT_USER","loginUser","username","id","token","dispatch","type","userData","err","Error","SignIn","props","useState","redirect","redirectHandler","password","email","inputValues","setInputValues","handleOnChange","event","target","name","value","useDispatch","to","pathname","Container","Form","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","status","alert","message","localStorage","setItem","usersActions","catch","error","Group","controlId","Label","Control","placeholder","onChange","required","Text","style","color","Button","variant","LogIn","Main","onSignInClick","setState","showLogIn","onLogInClick","state","bind","ButtonGroup","size","className","this","onClick","React","Component","Like","UpdateLikes","clicked","totalLikes","_id","getItem","GET_POSTS","DELETE_POST","getPosts","posts","a","result","deletePost","postId","postTitle","res","statusText","Post","key","redirectToUpdate","redirectToUpdateHandler","title","Card","Header","Accordion","Toggle","eventKey","toString","authorName","Collapse","Body","author","postsActions","likes","Posts","postslist","filter","post","includes","text","map","Blog","useSelector","setText","isLoading","setIsLoading","useEffect","Jumbotron","fluid","InputGroup","Prepend","FormControl","history","push","NavBar","redirectHome","redirectHomeHandler","RedirectToHomePage","removeItem","Navbar","Brand","Nav","NavDropdown","Item","About","Footer","href","rel","authError","AddPost","handleTitle","handleBody","handleSubmit","as","rows","updatePost","location","UpdateUser","handleUsername","handlePassword","handlePasswordConfirmation","passwordConfirmation","handleEmail","window","reload","App","exact","path","component","render","initialState","undefined","combinedReducer","combineReducers","users","action","console","log","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.44006f5b.chunk.js","sourcesContent":["export const LOGIN_USER = 'LOGIN_USER'\r\nexport const LOGOUT_USER = 'LOGOUT_USER'\r\n\r\nexport const logoutUser = (id) => {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: LOGOUT_USER,\r\n                userData: { id }\r\n            })\r\n        }\r\n\r\n        catch (err) {\r\n            throw new Error('error in logout user!')\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginUser = (username, id, token) => {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: LOGIN_USER,\r\n                userData: { username, id, token }\r\n            })\r\n        }\r\n\r\n        catch (err) {\r\n            throw new Error('error in login user!')\r\n        }\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button, Container } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport * as usersActions from '../../store/actions/users'\r\n\r\nconst SignIn = (props) => {\r\n\tconst [redirect, redirectHandler] = useState(false)\r\n\tconst [inputValues, setInputValues] = useState({\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t\temail: '',\r\n\t})\r\n\r\n\tconst handleOnChange = (event) => {\r\n\t\tconst { name, value } = event.target\r\n\t\tsetInputValues({ ...inputValues, [name]: value })\r\n\t}\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tfetch('/signin', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t...inputValues,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 400) {\r\n\t\t\t\t\talert(response.message)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlocalStorage.setItem('username', response.username)\r\n\t\t\t\t\tlocalStorage.setItem('_id', response.id)\r\n\t\t\t\t\tlocalStorage.setItem('token', response.token)\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tusersActions.loginUser(\r\n\t\t\t\t\t\t\tinputValues.username,\r\n\t\t\t\t\t\t\tresponse.id,\r\n\t\t\t\t\t\t\tresponse.token\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t\tredirectHandler(true)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert('An error occured!')\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (redirect)\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/blog',\r\n\t\t\t\t\tprops: { username: inputValues.username },\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\telse\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group controlId='user-username'>\r\n\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tplaceholder='Enter username'\r\n\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group controlId='user-email'>\r\n\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Text style={{ color: '#55633e' }}>\r\n\t\t\t\t\t\t\tWe'll never share your email with anyone else.\r\n\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group controlId='user-password'>\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Text style={{ color: '#55633e' }}>\r\n\t\t\t\t\t\t\tMust include 6 characters\r\n\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button variant='primary' type='submit'>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t)\r\n}\r\n\r\nexport default SignIn\r\n","import React, { useReducer, useState } from 'react'\r\nimport { Form, Button, Container } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector, useDispatch, useStore } from 'react-redux'\r\n\r\nimport * as usersActions from '../../store/actions/users'\r\n\r\nconst LogIn = (props) => {\r\n\tconst [redirect, redirectHandler] = useState(false)\r\n\tconst [inputValues, setInputValues] = useState({\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t})\r\n\r\n\tconst handleOnChange = (event) => {\r\n\t\tconst { name, value } = event.target\r\n\t\tsetInputValues({ ...inputValues, [name]: value })\r\n\t}\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tfetch('/login', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t...inputValues,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (!response.username) alert('Username/Password are not correct.')\r\n\t\t\t\telse {\r\n\t\t\t\t\tlocalStorage.setItem('username', inputValues.username)\r\n\t\t\t\t\tlocalStorage.setItem('_id', response.id)\r\n\t\t\t\t\tlocalStorage.setItem('token', response.token)\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tusersActions.loginUser(\r\n\t\t\t\t\t\t\tinputValues.username,\r\n\t\t\t\t\t\t\tresponse.id,\r\n\t\t\t\t\t\t\tresponse.token\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t\tredirectHandler(true)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (redirect)\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/blog',\r\n\t\t\t\t\tprops: { username: inputValues.username },\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\telse\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group controlId='user-username'>\r\n\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\tplaceholder='Enter username'\r\n\t\t\t\t\t\t\t// value={this.state.username}\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group controlId='user-password'>\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\t// value={this.state.password}\r\n\t\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button variant='primary' type='submit'>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t)\r\n}\r\n\r\nexport default LogIn\r\n","import React from 'react';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport SignIn from './main-components/sign-in'\r\nimport LogIn from './main-components/log-in'\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showLogIn: true\r\n        }\r\n\r\n        this.onSignInClick = this.onSignInClick.bind(this)\r\n        this.onLogInClick = this.onLogInClick.bind(this)\r\n    }\r\n\r\n    onSignInClick = () => {\r\n        this.setState({showLogIn: false})\r\n    }\r\n\r\n    onLogInClick = () => {\r\n        this.setState({showLogIn: true})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ButtonGroup size=\"lg\" className=\"main-btns\" aria-label=\"Basic example\">\r\n                    <Button className={this.state.showLogIn ? \"active-btn\": \"\"} onClick={this.onLogInClick}>Log-In</Button>\r\n                    <Button className={!this.state.showLogIn ? \"active-btn\": \"\"} onClick={this.onSignInClick}>Sign-In</Button>\r\n                </ButtonGroup>\r\n                {this.state.showLogIn ? <LogIn/> : <SignIn/>}\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Main","import React from 'react';\r\nimport { AiFillLike } from 'react-icons/ai';\r\nimport '../../../css/like.css'\r\n\r\nclass Like extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            totalLikes: this.props.totalLikes,\r\n            clicked: false\r\n        }\r\n        fetch('/posts/check-like', {\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"userID\": localStorage.getItem(\"_id\"),\r\n                \"postID\": this.props._id,\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            this.setState({\r\n                clicked: response.value\r\n            })\r\n        })\r\n        .catch(error => alert(\"An error occured!\"))\r\n\r\n        this.UpdateLikes = this.UpdateLikes.bind(this)\r\n    }\r\n\r\n    UpdateLikes = () => {\r\n        this.setState({\r\n            clicked: !this.state.clicked,\r\n            totalLikes: (!this.state.clicked) ? this.state.totalLikes + 1 :  \r\n            (this.state.totalLikes && this.state.clicked) ? this.state.totalLikes - 1 : \r\n            this.state.totalLikes  \r\n        })\r\n        \r\n        fetch('/posts/update-likes', {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"postID\": this.props._id,\r\n                \"userID\": localStorage.getItem(\"_id\"),\r\n                \"totalLikes\": this.state.totalLikes\r\n            })\r\n        })\r\n        .catch(error => alert(\"An error occured!\"))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Like\">\r\n                <AiFillLike className={!this.state.clicked ? \"like-btn\" : \"clicked-like\"} onClick={this.UpdateLikes}/>\r\n                <span> {this.state.totalLikes}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Like","export const GET_POSTS = 'GET_POSTS'\r\nexport const DELETE_POST = 'DELETE_POST'\r\n\r\nexport const getPosts = () => {\r\n    let posts = []\r\n    return async dispatch => {\r\n        await fetch('/posts/', {\r\n            method: 'GET',\r\n        })\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                posts = result\r\n            })\r\n            .catch((error) => {\r\n                alert('An error occured!')\r\n            })\r\n\r\n        await dispatch({ posts: posts, type: GET_POSTS })\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId, postTitle) => {\r\n    return async dispatch => {\r\n        await fetch(`/posts/${postId}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\")\r\n            })\r\n        })\r\n            .then((res) => {\r\n                if (res.status === 404 || res.status === 500) {\r\n                    alert(res.statusText)\r\n                }\r\n                else {\r\n                    alert(`Post ${postTitle} deleted successfully.`)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert(error)\r\n            })\r\n\r\n        await dispatch({ postId: postId, type: DELETE_POST })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Card, Accordion, Button } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Like from './post-components/like'\r\nimport '../../css/post.css'\r\nimport * as postsActions from '../../store/actions/posts'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport const Post = (props) => {\r\n\tlet key = 0\r\n\tconst [redirectToUpdate, redirectToUpdateHandler] = useState(false)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst userButtons = () => {\r\n\t\tif (localStorage.getItem('_id') === props.author) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='secondary'\r\n\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\tonClick={() => redirectToUpdateHandler(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUpdate Post\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\tonClick={() => dispatch(postsActions.deletePost(props._id, props.title))}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDelete Post\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\tif (redirectToUpdate)\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/updatePost',\r\n\t\t\t\t\tstate: {\r\n\t\t\t\t\t\t_id: props._id,\r\n\t\t\t\t\t\tbody: props.body,\r\n\t\t\t\t\t\ttitle: props.title,\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card className='post-card'>\r\n\t\t\t\t<Card.Header>\r\n\t\t\t\t\t<Accordion.Toggle className='post-btn' eventKey={(++key).toString()}>\r\n\t\t\t\t\t\t<b>{props.authorName}</b> {'|'} {props.title}\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Accordion.Collapse eventKey={key.toString()}>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<p>{props.body}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div className='post-sub-btns'>\r\n\t\t\t\t\t\t\t{userButtons()}\r\n\t\t\t\t\t\t\t<Like\r\n\t\t\t\t\t\t\t\t_id={props._id}\r\n\t\t\t\t\t\t\t\tauthor={props.author}\r\n\t\t\t\t\t\t\t\ttotalLikes={props.likes}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Accordion.Collapse>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Accordion } from 'react-bootstrap'\r\nimport { Post } from '../../blog-components/post'\r\nimport '../../../css/blog.css'\r\n\r\nexport const Posts = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{props.postslist\r\n\t\t\t\t.filter(\r\n\t\t\t\t\t(post) =>\r\n\t\t\t\t\t\tpost.title.includes(props.text) || post.body.includes(props.text)\r\n\t\t\t\t)\r\n\t\t\t\t.map((post) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Accordion>\r\n\t\t\t\t\t\t\t<Post\r\n\t\t\t\t\t\t\t\t_id={post._id}\r\n\t\t\t\t\t\t\t\tbody={post.body}\r\n\t\t\t\t\t\t\t\tauthor={post.author}\r\n\t\t\t\t\t\t\t\tauthorName={post.authorName}\r\n\t\t\t\t\t\t\t\ttitle={post.title}\r\n\t\t\t\t\t\t\t\tlikes={post.likes}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport {\r\n\tJumbotron,\r\n\tContainer,\r\n\tButton,\r\n\tInputGroup,\r\n\tFormControl,\r\n} from 'react-bootstrap'\r\nimport '../css/blog.css'\r\nimport '../css/loading.css'\r\nimport { Posts } from './blog-components/general-components/postsList'\r\nimport * as postsActions from '../store/actions/posts'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const Blog = (props) => {\r\n\tconst posts = useSelector((state) => state.posts.posts)\r\n\tconst [text, setText] = useState('')\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true)\r\n\t\tdispatch(postsActions.getPosts())\r\n\t\tsetIsLoading(false)\r\n\t}, [postsActions.getPosts, postsActions.deletePost])\r\n\r\n\tconst redirectToAddPost = () => {\r\n\t\tprops.history.push('/addPost')\r\n\t}\r\n\r\n\tconst handleSearch = (event) => {\r\n\t\tsetText(event.target.value)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isLoading ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Container className='text-center'>\r\n\t\t\t\t\t\t<Jumbotron fluid>\r\n\t\t\t\t\t\t\t<h1>Welcome!</h1>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tIn this blog you can share with the network everything you want!\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<InputGroup size='sm search'>\r\n\t\t\t\t\t\t\t<InputGroup.Prepend className='d-flex justify-content-center'>\r\n\t\t\t\t\t\t\t\t<InputGroup.Text>Search</InputGroup.Text>\r\n\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\taria-label='Small'\r\n\t\t\t\t\t\t\t\tplaceholder='Enter text here!'\r\n\t\t\t\t\t\t\t\tonChange={handleSearch}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div className='d-flex justify-content-center'>\r\n\t\t\t\t\t\t\t<Button onClick={redirectToAddPost}>Add new post</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t\t<Posts postslist={posts} text={text} />\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<div id='loading'>\r\n\t\t\t\t\tLoading\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className='dot' />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Blog\r\n","import React, { useState } from 'react'\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport '../css/navbar.css'\r\n\r\nconst NavBar = (props) => {\r\n\tconst [redirectHome, redirectHomeHandler] = useState(false)\r\n\r\n\tconst RedirectToHomePage = () => {\r\n\t\tfetch('/logout/' + localStorage.getItem('username'), {\r\n\t\t\tmethod: 'GET',\r\n\t\t}) //logout user - delete tokens\r\n\t\t\t.then(\r\n\t\t\t\tlocalStorage.removeItem('username'),\r\n\t\t\t\tlocalStorage.removeItem('token'),\r\n\t\t\t\tredirectHomeHandler(true)\r\n\t\t\t)\r\n\t}\r\n\r\n\tconst handleDeleteUser = () => {\r\n\t\tfetch('/delete/myuser', {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({ \r\n\t\t\t\t\"token\": localStorage.getItem(\"token\"),\r\n\t\t\t\t\"username\": localStorage.getItem(\"username\")\r\n\t\t\t }),\r\n\t\t})\r\n\t\t\t.then(RedirectToHomePage())\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (redirectHome) {\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: '/',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\t// if (redirectHome) {\r\n\t// \treturn (\r\n\t// \t\t<Redirect\r\n\t// \t\t\tto={{\r\n\t// \t\t\t\tpathname: '/',\r\n\t// \t\t\t}}\r\n\t// \t\t/>\r\n\t// \t)\r\n\t// }\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar variant='dark'>\r\n\t\t\t\t<Navbar.Brand>\r\n\t\t\t\t\tBlog-App\r\n\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t<Nav className='mr-auto'>\r\n\t\t\t\t\t{/* <Nav.Link href=\"/blog\">Blog</Nav.Link>\r\n            <Nav.Link href=\"/chat\">Chat</Nav.Link>\r\n            <Nav.Link href=\"/about\">About</Nav.Link> */}\r\n\t\t\t\t</Nav>\r\n\t\t\t\t<Navbar.Collapse className='justify-content-end'>\r\n\t\t\t\t\t<Navbar.Text>Signed in as:</Navbar.Text>\r\n\t\t\t\t\t<NavDropdown title={localStorage.getItem('username')} id='nav-dropdown'>\r\n\t\t\t\t\t\t<NavDropdown.Item>\r\n\t\t\t\t\t\t\t<Link to='./updateUser' className='link'>\r\n\t\t\t\t\t\t\t\tUpdate user\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item onClick={handleDeleteUser}>\r\n\t\t\t\t\t\t\tDelete user\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item onClick={RedirectToHomePage}>\r\n\t\t\t\t\t\t\tLog-out\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t\t<br />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react';\r\nimport Navbar from './navbar'\r\n\r\n\r\nclass About extends React.Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h2>About</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport { AiFillGithub, AiFillLinkedin} from 'react-icons/ai';\r\nimport '../css/footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <hr/>\r\n                <div className=\"footer-elements d-flex justify-content-center\">\r\n                    <p>Created By: Yehonatan Hen - &nbsp;</p>\r\n                    <a href=\"https://www.linkedin.com/in/yehonatan-hen/\" target=\"_blank\" rel=\"noopener noreferrer\"><AiFillLinkedin size=\"25\"/></a>\r\n                    <a href=\"https://github.com/YehonatanHen\" target=\"_blank\" rel=\"noopener noreferrer\"><AiFillGithub size=\"25\"/></a>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport Navbar from './navbar'\r\n\r\n\r\nclass Chat extends React.Component {\r\n    render(){\r\n        return (\r\n            <>\r\n                <Navbar/>\r\n                <h2>Chat</h2>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat","import React from 'react';\r\n\r\nexport default function authError(){\r\n    return (\r\n        <> \r\n            <h1>You are not authenticated!</h1>\r\n            <a href='/'>Log-in/Sign-in</a>\r\n        </>\r\n    )\r\n};","import React from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\n\r\nclass AddPost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: '',\r\n            body: ''\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleTitle = this.handleTitle.bind(this)\r\n        this.handleBody = this.handleBody.bind(this)\r\n    }\r\n\r\n    handleTitle = (event) => {\r\n        this.setState({title: event.target.value})\r\n    }\r\n\r\n    handleBody = (event) => {\r\n        this.setState({body: event.target.value})\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/add-post', {\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\"),\r\n                \"title\": this.state.title,\r\n                \"body\": this.state.body,\r\n                \"author\": localStorage.getItem(\"_id\"), //_id value saved in storage when user login/signin\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if(response.status === 400) {\r\n                alert(response.message)\r\n            }\r\n            else if(!response._id) alert(response.message)\r\n            else {\r\n                this.props.history.push({\r\n                    pathname: '/blog',\r\n                })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(\"An error occured!\")\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <h1 className=\"text-center\">Add new post</h1>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Title:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={1} value={this.state.title} onChange={this.handleTitle}/>\r\n                            <br/>\r\n                            <Form.Label>body:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} value={this.state.body} onChange={this.handleBody}/>\r\n                        </Form.Group>\r\n                        <br/>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                    <Button variant=\"primary\"type=\"submit\">Add</Button>\r\n                    </div>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n        );\r\n   }; \r\n}\r\n\r\nexport default AddPost","import React from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport Navbar from '../navbar'\r\n\r\nclass updatePost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: this.props.location.state.title,\r\n            body: this.props.location.state.body\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleTitle = this.handleTitle.bind(this)\r\n        this.handleBody = this.handleBody.bind(this)\r\n    }\r\n\r\n    handleTitle = (event) => {\r\n        this.setState({title: event.target.value})\r\n    }\r\n\r\n    handleBody = (event) => {\r\n        this.setState({body: event.target.value})\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/posts/update-post', {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\"),\r\n                \"title\": this.state.title,\r\n                \"body\": this.state.body,\r\n                \"postID\": this.props.location.state._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if(!response._id) alert(response.message)\r\n            else {\r\n                this.props.history.push({\r\n                    pathname: '/blog',\r\n                })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(\"An error occured!\" + error) \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <h1 className=\"text-center\">Update post</h1>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Title:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={1} value={this.state.title} onChange={this.handleTitle}/>\r\n                            <br/>\r\n                            <Form.Label>body:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} value={this.state.body} onChange={this.handleBody}/>\r\n                        </Form.Group>\r\n                        <br/>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                    <Button variant=\"primary\"type=\"submit\">Update</Button>\r\n                    </div>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n        );\r\n   }; \r\n}\r\n\r\nexport default updatePost","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass UpdateUser extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            username: localStorage.getItem(\"username\"),\r\n            password: '',\r\n            passwordConfirmation: '',\r\n            email: ''\r\n        }\r\n\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.handlePasswordConfirmation = this.handlePasswordConfirmation.bind(this)\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleUsername = (event) => {\r\n        this.setState({username: event.target.value});\r\n    }\r\n\r\n    handlePassword = (event) => {\r\n        this.setState({password: event.target.value}); \r\n    }\r\n\r\n    handlePasswordConfirmation = (event) => {\r\n        this.setState({passwordConfirmation: event.target.value}); \r\n    }\r\n\r\n    handleEmail = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        fetch('/update-user', {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                \"token\": localStorage.getItem(\"token\"),\r\n                \"userID\": localStorage.getItem(\"_id\"), \r\n                \"username\": this.state.username,\r\n                \"email\": this.state.email,\r\n                \"password\": this.state.password\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if(response.status === 400) {\r\n                alert(response.status)\r\n            }\r\n            else if (this.state.password !== this.state.passwordConfirmation) {\r\n                alert(\"Passwords don't match!\")\r\n                window.location.reload(false); //Refreshing page\r\n            }\r\n            else {\r\n                localStorage.setItem(\"username\", response.username)              \r\n                this.setState({ redirect: true })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(\"An error occured!\")\r\n        })\r\n    }\r\n    \r\n\r\n    render () {\r\n        if (this.state.redirect)\r\n            return (\r\n            <Redirect to={{\r\n                pathname: '/blog',\r\n            }}/>\r\n            )\r\n        else return (\r\n            <Container>\r\n                <h1 className=\"text-center\">Update user</h1>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId=\"user-username\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" value={this.state.username} onChange={this.handleUsername} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"user-email\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" value={this.state.email} onChange={this.handleEmail} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"user-password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" value={this.state.password} onChange={this.handlePassword} required/>\r\n                        <Form.Label>Confirm password</Form.Label>\r\n                        <Form.Control type=\"password\" value={this.state.passwordConfirmation} onChange={this.handlePasswordConfirmation} required/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button >\r\n                </Form>\r\n            </Container>\r\n        );\r\n    };\r\n};\r\n\r\nexport default UpdateUser\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Main from './components/main'\r\nimport Blog from './components/blog'\r\nimport About from './components/about'\r\nimport Chat from './components/chat'\r\nimport Footer from './components/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport authError from './components/authError'\r\nimport AddPost from './components/addPost'\r\nimport UpdatePost from './components/update-components/updatePost'\r\nimport UpdateUser from './components/update-components/updateUser'\r\nimport NavBar from './components/navbar'\r\nimport './css/app.css'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='app'>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path='/' component={Main} />\r\n           \t\t\t\t<Route path='/authError' component={authError} />\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<NavBar />\r\n\t\t\t\t\t\t\t<Route path='/blog' render={(props) => <Blog {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/about' render={(props) => <About {...props}/>} />\r\n\t\t\t\t\t\t\t{/* <Route path='/chat'  render={() => <Chat />} /> */}\r\n\t\t\t\t\t\t\t<Route path='/addPost' render={(props) => <AddPost {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/updatePost' render={(props) => <UpdatePost {...props}/>} />\r\n\t\t\t\t\t\t\t<Route path='/updateUser' render={(props) => <UpdateUser {...props}/>} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t\t<div className='gap'>\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App\r\n","import { LOGIN_USER, LOGOUT_USER } from '../actions/users'\r\n\r\nconst initialState = {\r\n    username: undefined,\r\n    id: undefined,\r\n    token: undefined\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return {\r\n                ...state,\r\n                username: action.userData.username,\r\n                id: action.userData.id,\r\n                token: action.userData.token,\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { GET_POSTS, DELETE_POST } from '../actions/posts'\r\n\r\nconst initialState = {\r\n    posts: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.posts\r\n            }\r\n        case DELETE_POST:\r\n            console.log(state)\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== action.postId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux'\r\nimport usersReducer from './store/reducers/users'\r\nimport postsReducer from './store/reducers/posts'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nconst combinedReducer = combineReducers({\r\n    users: usersReducer,\r\n    posts: postsReducer\r\n})\r\n\r\nconst store = createStore(combinedReducer, applyMiddleware(ReduxThunk));\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}